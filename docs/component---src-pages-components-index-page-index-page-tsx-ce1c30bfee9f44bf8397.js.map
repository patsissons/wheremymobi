{"version":3,"sources":["webpack:///./src/components/Loader/Loader.tsx","webpack:///./src/components/Loader/index.ts","webpack:///./src/components/StationMap/components/GpsMarker/GpsMarker.tsx","webpack:///./src/components/StationMap/components/GpsMarker/index.ts","webpack:///./src/components/StationMap/components/StationInfo/StationInfo.tsx","webpack:///./src/components/StationMap/components/StationInfo/index.ts","webpack:///./src/components/StationMap/components/StationMarker/icon.ts","webpack:///./src/components/StationMap/components/StationMarker/StationMarker.tsx","webpack:///./src/components/StationMap/components/StationMarker/index.ts","webpack:///./src/components/StationMap/decorators.ts","webpack:///./src/components/StationMap/StationMap.tsx","webpack:///./src/components/StationMap/index.ts","webpack:///./src/layouts/DefaultLayout/components/Header/Header.tsx","webpack:///./src/layouts/DefaultLayout/components/Header/index.ts","webpack:///./src/layouts/DefaultLayout/DefaultLayout.tsx","webpack:///./src/layouts/DefaultLayout/index.ts","webpack:///./src/pages/components/IndexPage/IndexPage.tsx","webpack:///./src/station/Node.ts","webpack:///./src/data/transform/Smoove.ts","webpack:///./src/station/Station.ts","webpack:///./src/data/config.ts","webpack:///./src/data/StationSource.ts","webpack:///./src/pages/components/IndexPage/decorators.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Loader/Loader.module.scss","webpack:///./src/components/StationMap/StationMap.module.scss","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/layouts/DefaultLayout/components/Header/Header.module.scss","webpack:///./src/layouts/DefaultLayout/DefaultLayout.module.scss"],"names":["loaders","compose","Loader","withProps","_ref2","name","Math","floor","random","length","_ref","Boolean","react","className","styles","dist_default","a","GpsMarker","coords","props","timestamp","objectWithoutPropertiesLoose_default","accuracy","heading","lat","latitude","lng","longitude","position","google","maps","LatLng","lib","center","radius","options","fillColor","strokeColor","fillOpacity","strokeWeight","Object","assign","icon","anchor","Point","path","SymbolPath","FORWARD_CLOSED_ARROW","rotation","scale","StationInfo","fetchedAt","station","number","toString","padStart","operative","bikes","free","total","target","href","fromNow","marker","trim","createIcon","url","replace","markerWithFillColor","labelOrigin","StationMarker","withHandlers","handleOnClick","showInfo","node","onClick","label","text","fontSize","fontWeight","withMapsApiKey","defaultProps","mapsApiKey","StationMap","_React$PureComponent","_this","_len","arguments","args","Array","_key","call","apply","this","concat","renderInfo","_this$props","location","selectedNode","onCloseClick","hideInfo","pixelOffset","Size","components_StationInfo","renderMarker","isValid","console","debug","components_StationMarker","key","renderMarkers","clustered","markers","from","nodes","values","map","MarkerClusterer_default","averageCenter","enableRetinaIcons","gridSize","maxZoom","renderPosition","components_GpsMarker","inheritsLoose_default","prototype","render","_this$props2","defaultCenter","defaultZoom","React","withStateHandlers","undefined","googleMapURL","loadingElement","containerElement","mapElement","mapProps","reduce","set","Map","withScriptjs","withGoogleMap","Header","description","logo","logoUrl","src","query","DefaultLayout","errors","fromRenderProps","gatsby_browser_entry","data","_3229557108","_ref3","site","_ref$site$siteMetadat","siteMetadata","components_Header","IndexPage","params","reload","stations","log","layouts_DefaultLayout","components_StationMap","config","components_Loader","__webpack_require__","d","__webpack_exports__","withQueryParams","withPosition","withStations","StationNode","createClass_default","get","Number","isInteger","isFinite","test","every","x","create","createStation","avl_bikes","free_slots","total_slots","match","exec","Error","error","push","parseNameAndNumber","parseLatLng","coordinates","StationSourceType","result","configMap","type","uri","cors","StationSource","transform","verboseOutput","process","configOrKey","toLowerCase","getConfig","Smoove","mapTransform","nearest","distance","geometry","spherical","computeDistanceBetween","sort","b","getConfigByLocation","_proto","getJSON","headers","ajax","getStations","source","pipe","tap","response","moment","catchError","message","of","watchStations","reloader","interval","_this2","merge","timer","debounceTime","mergeMap","setObservableConfig","fromESObservable","URLSearchParams","window","search","forEach","value","enableHighAccuracy","Observable","observer","navigator","geolocation","watchPosition","next","mapPropsStream","combineLatest","startWith","prev","defaultKey","Subject","stationsObservable","filter","distinctUntilChanged","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","createElement","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","LoadingContainer","MapContainer","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","HeaderLogo","HeaderContent","Container","Content"],"mappings":"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","file":"component---src-pages-components-index-page-index-page-tsx-ce1c30bfee9f44bf8397.js","sourcesContent":["import * as React from 'react';\nimport Spinner, {SpinnerProps} from 'react-spinkit';\nimport {compose, withProps} from 'recompose';\n\nimport * as styles from './Loader.module.scss';\n\nconst loaders: Required<SpinnerProps['name']>[] = [\n  'double-bounce',\n  'chasing-dots',\n  'circle',\n  'cube-grid',\n];\n\nfunction randomLoaderName() {\n  return loaders[Math.floor(Math.random() * loaders.length)];\n}\n\nexport interface Props {\n  name?: SpinnerProps['name'];\n}\n\nexport function Loader({name}: Props) {\n  return (\n    Boolean(name) && (\n      <div className={styles.LoadingContainer}>\n        <Spinner className={styles.Loader} name={name} />\n      </div>\n    )\n  );\n}\n\nexport default compose<Props, {}>(\n  withProps(({name}: Props) => ({name: name || randomLoaderName()})),\n)(Loader as any);\n","import Loader, {Props} from './Loader';\nexport type LoaderProps = Props;\nexport default Loader;\n","import * as React from 'react';\nimport {Circle, Marker, MarkerProps} from 'react-google-maps';\n\nexport interface Props extends MarkerProps {\n  coords: Coordinates;\n  timestamp: number;\n}\n\ntype ComposedProps = Props;\n\nexport function GpsMarker({coords, timestamp, ...props}: ComposedProps) {\n  const {accuracy, heading, latitude: lat, longitude: lng} = coords;\n\n  const position = new google.maps.LatLng(lat, lng);\n\n  return (\n    <>\n      <Circle\n        center={position}\n        radius={accuracy}\n        options={{\n          fillColor: 'blue',\n          strokeColor: 'blue',\n          fillOpacity: 0.25,\n          strokeWeight: 1,\n        }}\n      />\n      <Marker\n        icon={{\n          anchor: new google.maps.Point(0, 2.6),\n          path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n          strokeColor: 'blue',\n          fillColor: 'blue',\n          fillOpacity: 1,\n          rotation: heading,\n          scale: 6,\n          strokeWeight: 1,\n        }}\n        position={new google.maps.LatLng(lat, lng)}\n        {...props}\n      />\n    </>\n  );\n}\n\nexport default GpsMarker;\n","import GpsMarker, {Props} from './GpsMarker';\nexport type GpsMarkerProps = Props;\nexport default GpsMarker;\n","import * as React from 'react';\nimport moment from 'moment';\nimport {Station} from '~/station';\n\nexport interface Props {\n  fetchedAt: moment.Moment;\n  station: Station;\n}\n\nexport function StationInfo({fetchedAt, station}: Props) {\n  return (\n    <div>\n      <ul>\n        <li>{`[${station.number.toString().padStart(4, '0')}] ${station.name}${\n          station.operative ? '' : ' (CLOSED)'\n        }`}</li>\n        <li>{`${station.bikes} bikes / ${station.free} slots (${\n          station.total\n        } total)`}</li>\n        <li>\n          <a\n            target=\"_blank\"\n            href={`https://www.google.com/maps/dir/?api=${1}&travelmode=bicycling&destination=${\n              station.lat\n            },${station.lng}`}\n          >{`${station.lat}, ${station.lng}`}</a>\n        </li>\n        <li>{`Last Updated: ${fetchedAt.fromNow()}`}</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default StationInfo;\n","import StationInfo, {Props} from './StationInfo';\nexport type StationInfoProps = Props;\nexport default StationInfo;\n","import {Station} from '~/station';\nconst marker = `\n<svg width=\"100px\" height=\"100px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\n  <path id=\"bg\" fill=\"#ffffff\" d=\"m77.438,31.70225c-0.139,-5.802 -1.797,-10.248 -4.202,-14.012c-2.307,-3.607 -5.341,-6.666 -9.258,-8.958c-4.793,-2.803 -11.556,-4.639 -18.766,-3.553c-8.819,1.33 -15.391,6.39 -19.316,12.561c-2.385,3.752 -4.039,8.341 -4.152,14.062c-0.117,5.854 1.706,10.369 3.954,14.261c1.122,1.948 2.132,3.929 3.302,5.805c3.504,5.621 7.291,10.97 10.559,16.765c4.406,7.812 8.044,16.242 10.108,26.371c2.984,-15.367 9.802,-26.583 17.063,-37.58c2.439,-3.692 4.867,-7.382 6.806,-11.41c0.993,-2.063 2.107,-3.996 2.803,-6.306c0.684,-2.283 1.172,-5.035 1.099,-8.006z\"/>\n  <path id=\"fill\" fill=\"currentColor\" d=\"M77.438,31.834c-0.139-5.802-1.797-10.248-4.202-14.012c-2.307-3.607-5.341-6.666-9.258-8.958   c-4.793-2.803-11.556-4.639-18.766-3.553c-8.819,1.33-15.391,6.39-19.316,12.561c-2.385,3.752-4.039,8.341-4.152,14.062   c-0.117,5.854,1.706,10.369,3.954,14.261C26.82,48.143,27.83,50.124,29,52c3.504,5.621,7.291,10.97,10.559,16.765   c4.406,7.812,8.044,16.242,10.108,26.371c2.984-15.367,9.802-26.583,17.063-37.58c2.439-3.692,4.867-7.382,6.806-11.41   c0.993-2.063,2.107-3.996,2.803-6.306C77.023,37.557,77.511,34.805,77.438,31.834z M49.685,52.47   c-11.004,0-19.923-8.92-19.923-19.923c0-11.002,8.919-19.922,19.923-19.922c11.003,0,19.923,8.92,19.923,19.922   C69.607,43.55,60.688,52.47,49.685,52.47z\"/>\n</svg>`.trim();\n\nexport function getFillColor({bikes}: Station): string {\n  if (bikes > 10) {\n    return 'forestgreen';\n  }\n\n  if (bikes > 5) {\n    return 'coral';\n  }\n\n  return 'crimson';\n}\n\nfunction markerWithFillColor(station: Station) {\n  return `data:image/svg+xml;utf8,${marker.replace(\n    /fill=\"currentColor\"/,\n    `fill=\"${getFillColor(station)}\"`,\n  )}`;\n}\n\nexport function createIcon(station: Station): google.maps.Icon {\n  return {\n    url: markerWithFillColor(station),\n    labelOrigin: new google.maps.Point(49, 33),\n  };\n}\n","import * as React from 'react';\nimport {Marker, MarkerProps} from 'react-google-maps';\nimport {compose, withHandlers} from 'recompose';\nimport {StationNode} from '~/station';\nimport {createIcon} from './icon';\n\nexport interface SelectedStationProps {\n  selectedNode?: StationNode;\n}\n\nexport interface ActionProps {\n  showInfo(station: StationNode): SelectedStationProps;\n}\n\nexport interface Props extends ActionProps, MarkerProps {\n  node: StationNode;\n}\n\ninterface HandlerProps {\n  handleOnClick(): void;\n}\n\ntype ComposedProps = Props & HandlerProps;\n\nexport function StationMarker({\n  handleOnClick,\n  showInfo,\n  node: {station},\n  ...props\n}: ComposedProps) {\n  const {lat, lng} = station;\n\n  return (\n    <Marker\n      onClick={handleOnClick}\n      icon={createIcon(station)}\n      label={{\n        text: `${station.bikes} | ${station.free}`,\n        fontSize: '0.75rem',\n        fontWeight: 'bold',\n      }}\n      position={new google.maps.LatLng(lat, lng)}\n      {...props}\n    />\n  );\n}\n\nexport default compose<ComposedProps, Props>(\n  withHandlers({\n    handleOnClick({showInfo, node}: Props) {\n      return () => showInfo(node);\n    },\n  }),\n)(StationMarker);\n","import StationMarker, {\n  ActionProps,\n  Props,\n  SelectedStationProps,\n} from './StationMarker';\nexport type SelectedStationProps = SelectedStationProps;\nexport type StationMarkerActionProps = ActionProps;\nexport type StationMarkerProps = Props;\nexport default StationMarker;\n","import {defaultProps, InferableComponentEnhancerWithProps} from 'recompose';\n\nexport interface WithMapsApiKeyProps {\n  mapsApiKey: string;\n}\n\n// export function withMapsApiKey(): InferableComponentEnhancerWithProps<\n//   WithMapsApiKeyProps,\n//   any\n// > {\n//   return defaultProps({\n//     mapsApiKey: 'AIzaSyBXrYScIU6sWYUWLLlovYhzq-bLzwTgAoc',\n//   });\n// }\n\nexport const withMapsApiKey = defaultProps({\n  mapsApiKey: 'AIzaSyBXrYScIU6sWYUWLLlovYhzq-bLzwTgAoc',\n});\n","import * as React from 'react';\nimport moment from 'moment';\nimport {\n  compose,\n  mapProps,\n  withProps,\n  withStateHandlers,\n  defaultProps,\n  StateHandlerMap,\n} from 'recompose';\nimport {\n  BicyclingLayer,\n  GoogleMap,\n  InfoWindow,\n  withScriptjs,\n  WithScriptjsProps,\n  withGoogleMap,\n  WithGoogleMapProps,\n} from 'react-google-maps';\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer';\nimport {StationNode} from '~/station';\nimport {\n  GpsMarker,\n  GpsMarkerProps,\n  SelectedStationProps,\n  StationInfo,\n  StationMarker,\n  StationMarkerActionProps,\n} from './components';\nimport {withMapsApiKey, WithMapsApiKeyProps} from './decorators';\n\nimport * as styles from './StationMap.module.scss';\n\ninterface FetchProps {\n  fetchedAt: moment.Moment;\n  location: google.maps.LatLngLiteral;\n}\n\ninterface PositionProps {\n  position: Partial<GpsMarkerProps> | undefined;\n}\n\nexport interface Props extends FetchProps, PositionProps {\n  nodes: StationNode[];\n}\n\ninterface DefaultProps {\n  defaultCenter: google.maps.LatLngLiteral;\n  defaultZoom: number;\n}\n\ninterface InjectedProps {\n  nodes: Map<number, StationNode>;\n}\n\ninterface ActionProps\n  extends StationMarkerActionProps,\n    StateHandlerMap<SelectedStationProps> {\n  hideInfo(): SelectedStationProps;\n}\n\ntype ComposedProps = ActionProps &\n  DefaultProps &\n  FetchProps &\n  InjectedProps &\n  PositionProps &\n  SelectedStationProps &\n  WithMapsApiKeyProps &\n  WithGoogleMapProps &\n  WithScriptjsProps;\n\nexport class StationMap extends React.PureComponent<ComposedProps> {\n  renderInfo = () => {\n    const {fetchedAt, location, selectedNode} = this.props;\n\n    return (\n      (selectedNode && (\n        <InfoWindow\n          position={location}\n          onCloseClick={this.props.hideInfo}\n          options={{\n            pixelOffset: new google.maps.Size(0, -100),\n          }}\n        >\n          <StationInfo fetchedAt={fetchedAt} station={selectedNode.station} />\n        </InfoWindow>\n      )) ||\n      false\n    );\n  };\n\n  renderMarker = (node: StationNode) => {\n    if (!node.isValid) {\n      // this should never happen\n      // tslint:disable-next-line:no-console\n      console.debug(`Bad Station Found`, node.station);\n      return false;\n    }\n\n    const {showInfo} = this.props;\n\n    return (\n      <StationMarker\n        key={node.station.number}\n        node={node}\n        showInfo={showInfo}\n      />\n    );\n  };\n\n  renderMarkers = (clustered = true) => {\n    const markers = Array.from(this.props.nodes.values()).map(\n      this.renderMarker,\n    );\n\n    return clustered ? (\n      <MarkerClusterer\n        averageCenter\n        enableRetinaIcons\n        gridSize={50}\n        maxZoom={17}\n      >\n        {markers}\n      </MarkerClusterer>\n    ) : (\n      markers\n    );\n  };\n\n  renderPosition = () => {\n    const {position} = this.props;\n\n    if (!position || !position.coords || !position.timestamp) {\n      return false;\n    }\n\n    return (\n      <GpsMarker coords={position.coords} timestamp={position.timestamp} />\n    );\n  };\n\n  render() {\n    const {hideInfo, defaultCenter, defaultZoom} = this.props;\n\n    return (\n      <GoogleMap\n        defaultCenter={defaultCenter}\n        defaultZoom={defaultZoom}\n        onClick={hideInfo}\n      >\n        <BicyclingLayer />\n        {this.renderPosition()}\n        {this.renderInfo()}\n        {this.renderMarkers()}\n      </GoogleMap>\n    );\n  }\n}\n\nexport default compose<ComposedProps, Props>(\n  withMapsApiKey,\n  defaultProps<DefaultProps>({\n    defaultCenter: {\n      lat: 49.279627,\n      lng: -123.121116,\n    },\n    defaultZoom: 13,\n  }),\n  withStateHandlers<SelectedStationProps, ActionProps, ComposedProps>(\n    {},\n    {\n      showInfo() {\n        return (selectedNode: StationNode) => ({selectedNode});\n      },\n      hideInfo() {\n        return () => ({selectedNode: undefined});\n      },\n    },\n  ),\n  withProps<WithGoogleMapProps & WithScriptjsProps, WithMapsApiKeyProps>(\n    ({mapsApiKey}) => ({\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${mapsApiKey}&v=3.exp&libraries=geometry,drawing,places`,\n      loadingElement: <div className={styles.LoadingContainer}>Loading...</div>,\n      containerElement: <div className={styles.MapContainer} />,\n      mapElement: <div className={styles.Map} />,\n    }),\n  ),\n  mapProps<InjectedProps, WithMapsApiKeyProps & Props>(\n    ({mapsApiKey, nodes, ...props}) => {\n      return {\n        nodes: nodes.reduce((map, node) => {\n          return map.set(node.station.number, node);\n        }, new Map<number, StationNode>()),\n        ...props,\n      };\n    },\n  ),\n  withScriptjs,\n  withGoogleMap,\n)(StationMap);\n","import StationMap, {Props} from './StationMap';\nexport type StationMapProps = Props;\nexport default StationMap;\n\nimport {withMapsApiKey, WithMapsApiKeyProps} from './decorators';\nexport type WithMapsApiKeyProps = WithMapsApiKeyProps;\nexport {withMapsApiKey};\n","import * as React from 'react';\n\nimport * as styles from './Header.module.scss';\n\nexport interface Props {\n  description: string;\n  logo: string;\n  logoUrl: string;\n}\n\nexport function Header({description, logo, logoUrl}: Props) {\n  return (\n    <div className={styles.Header}>\n      <div className={styles.HeaderLogo}>\n        <a href={logoUrl}>\n          <img src={logo} />\n        </a>\n      </div>\n      <div className={styles.HeaderContent}>\n        <h1>{description}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import Header, {Props} from './Header';\nexport type HeaderProps = Props;\nexport default Header;\n","import * as React from 'react';\nimport {graphql, StaticQuery} from 'gatsby';\nimport {compose, defaultProps, fromRenderProps} from 'recompose';\nimport {Header, HeaderProps} from './components';\n\nimport * as styles from './DefaultLayout.module.scss';\n\nexport interface Props {\n  errors: any[];\n}\n\ninterface QueryProps {\n  site: {\n    siteMetadata: HeaderProps;\n  };\n}\n\ntype ComposedProps = Props & QueryProps;\n\nexport function DefaultLayout({\n  errors,\n  site: {\n    siteMetadata: {description, logo, logoUrl},\n  },\n  ...props\n}: ComposedProps) {\n  return (\n    <div className={styles.Container}>\n      <Header description={description} logo={logo} logoUrl={logoUrl} />\n      <div className={styles.Content} {...props} />\n      {errors.length === 0 ? false : <div>{errors}</div>}\n    </div>\n  );\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        description\n        logo\n        logoUrl\n      }\n    }\n  }\n`;\n\nfunction DefaultLayoutQuery({...props}: any) {\n  return <StaticQuery query={query} {...props} />;\n}\n\nexport default compose<ComposedProps, {}>(\n  defaultProps({\n    errors: [],\n  }),\n  fromRenderProps<QueryProps, {}>(DefaultLayoutQuery, ({site}) => ({site})),\n)(DefaultLayout);\n","import DefaultLayout, {Props} from './DefaultLayout';\nexport type DefaultLayoutProps = Props;\nexport default DefaultLayout;\n","import * as React from 'react';\nimport {compose} from 'recompose';\nimport {Loader, StationMap} from '~/components';\nimport {DefaultLayout} from '~/layouts';\nimport {\n  withPosition,\n  WithPositionProps,\n  withQueryParams,\n  WithQueryParamProps,\n  withStations,\n  WithStationsProps,\n} from './decorators';\n\ntype ComposedProps = WithPositionProps &\n  WithQueryParamProps &\n  WithStationsProps;\n\nexport function IndexPage({params, position, reload, stations}: ComposedProps) {\n  console.log('reload', reload);\n  return (\n    <DefaultLayout>\n      {!params || !stations ? (\n        <Loader />\n      ) : (\n        <StationMap\n          fetchedAt={stations.fetchedAt}\n          location={stations.config.location}\n          nodes={stations.nodes}\n          position={position}\n        />\n      )}\n    </DefaultLayout>\n  );\n}\n\nexport default compose<ComposedProps, {}>(\n  withQueryParams,\n  withPosition(),\n  withStations(),\n)(IndexPage);\n","import {Station} from './Station';\n\nexport class StationNode {\n  public readonly station: Station;\n\n  constructor(station: Station) {\n    this.station = station;\n  }\n\n  public get isValid() {\n    return [\n      Number.isInteger(this.station.bikes),\n      Number.isInteger(this.station.free),\n      Number.isInteger(this.station.total),\n      Number.isInteger(this.station.number),\n      this.station.number > 0,\n      Number.isFinite(this.station.lat),\n      this.station.lat !== 0,\n      Number.isFinite(this.station.lng),\n      this.station.lng !== 0,\n      /^\\w/.test(this.station.name),\n      this.station.errors.length === 0,\n    ].every((x) => x);\n  }\n\n  toString() {\n    return this.isValid\n      ? `[${this.station.number}] ${this.station.name} (${\n          this.station.bikes\n        } | ${this.station.free})`\n      : 'INVALID';\n  }\n}\n","import {OperatorFunction} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {createStation, parseLatLng, Station} from '~/station';\n\nexport interface SmooveStation {\n  name: string;\n  coordinates: string;\n  total_slots: number;\n  free_slots: number;\n  avl_bikes: number;\n  operative: boolean;\n  style: string;\n}\n\nexport interface Response {\n  result: SmooveStation[];\n}\n\nexport function parseNameAndNumber({name}: SmooveStation, station: Station) {\n  try {\n    const match = /^(\\d+)\\s+(.*)$/.exec(name);\n\n    if (!match) {\n      throw new Error(`Unable to parse \"number name\" from ${name}`);\n    }\n\n    station.number = Number(match[1]);\n    station.name = match[2];\n  } catch (error) {\n    station.errors.push(error);\n  }\n}\n\nexport function create(data: SmooveStation) {\n  const station = createStation({\n    data,\n    bikes: data.avl_bikes,\n    free: data.free_slots,\n    operative: data.operative,\n    total: data.total_slots,\n  });\n\n  parseNameAndNumber(data, station);\n  parseLatLng(data.coordinates, station);\n\n  return station;\n}\n\nexport default map<Response, Station[]>(({result}) => result.map(create));\n","export interface Station extends google.maps.LatLngLiteral {\n  bikes: number;\n  data: any;\n  errors: any[];\n  free: number;\n  name: string;\n  number: number;\n  operative: boolean;\n  total: number;\n}\n\nexport function createStation(station: Partial<Station> = {}): Station {\n  return {\n    data: null,\n    errors: [],\n    bikes: 0,\n    free: 0,\n    lat: 0,\n    lng: 0,\n    name: '',\n    number: 0,\n    operative: false,\n    total: 0,\n    ...station,\n  };\n}\n\nexport function parseLatLng(position: string, station: Station) {\n  try {\n    const match = /^\\s*(-?\\d+\\.\\d+)\\s*,\\s*(-?\\d+\\.\\d+)\\s*$/.exec(position);\n\n    if (!match) {\n      throw new Error(`Unable to parse \"lat, lng\" from ${position}`);\n    }\n\n    station.lat = Number(match[1]);\n    station.lng = Number(match[2]);\n  } catch (error) {\n    station.errors.push(error);\n  }\n}\n","import {OperatorFunction} from 'rxjs';\nimport {Station} from '~/station';\nimport {Smoove} from './transform';\n\nenum StationSourceType {\n  Smoove,\n}\n\nexport interface StationSourceConfig {\n  location: google.maps.LatLngLiteral;\n  name: string;\n  options?: any;\n  type: keyof typeof StationSourceType;\n  uri: string;\n  cors?: boolean;\n}\n\nconst configMap = new Map<string, StationSourceConfig>([\n  [\n    'test',\n    {\n      location: {\n        lat: 49.279627,\n        lng: -123.121116,\n      },\n      name: 'Test Data',\n      type: 'Smoove',\n      uri: '/static_data',\n    },\n  ],\n  [\n    'vancouver',\n    {\n      location: {\n        lat: 49.279627,\n        lng: -123.121116,\n      },\n      name: 'Mobi Bike Vancouver',\n      type: 'Smoove',\n      uri: 'http://vancouver-ca.smoove.pro/api-public/stations',\n      cors: true,\n    },\n  ],\n]);\n\nexport function getConfig(key: string) {\n  const config = configMap.get(key.toLowerCase());\n\n  if (!config) {\n    throw new Error(`No station data for source '${key}'`);\n  }\n\n  return config;\n}\n\nexport function getConfigByLocation(location: google.maps.LatLng) {\n  return Array.from(configMap.values())\n    .map((config) => ({\n      config,\n      distance: google.maps.geometry.spherical.computeDistanceBetween(\n        location,\n        new google.maps.LatLng(config.location.lat, config.location.lng),\n      ),\n    }))\n    .sort((a, b) => a.distance - b.distance)[0].config;\n}\n\nexport type StationSourceTransform = OperatorFunction<any, Station[]>;\n\nexport function mapTransform({\n  type,\n}: StationSourceConfig): StationSourceTransform {\n  switch (type) {\n    case 'Smoove':\n      return Smoove;\n    default:\n      throw new Error(`Invalid Configuration '${type}'`);\n  }\n}\n","import moment from 'moment';\nimport {Observable, of, timer, combineLatest, merge} from 'rxjs';\nimport {ajax} from 'rxjs/ajax';\nimport {tap, map, catchError, mergeMap, debounceTime} from 'rxjs/operators';\nimport {Station, StationNode} from '~/station';\nimport {\n  getConfig,\n  getConfigByLocation,\n  mapTransform,\n  StationSourceConfig,\n  StationSourceTransform,\n} from './config';\n\nexport interface StationSourceResult {\n  config: StationSourceConfig;\n  error?: any[];\n  fetchedAt: moment.Moment;\n  nodes: StationNode[];\n}\n\nexport interface Options {\n  debug?: boolean;\n}\n\nexport class StationSource {\n  public static create(\n    configOrKey: string | StationSourceConfig,\n    {debug}: Options,\n  ) {\n    const config =\n      typeof configOrKey === 'string' ? getConfig(configOrKey) : configOrKey;\n\n    return new StationSource(config, mapTransform(config), debug);\n  }\n\n  public static nearest(location: google.maps.LatLng, options: Options) {\n    return StationSource.create(getConfigByLocation(location), options);\n  }\n\n  readonly config: StationSourceConfig;\n  readonly verboseOutput: boolean;\n  private readonly transform: StationSourceTransform;\n\n  constructor(\n    config: StationSourceConfig,\n    transform: StationSourceTransform,\n    verboseOutput = process.env.NODE_ENV !== 'production',\n  ) {\n    this.config = config;\n    this.transform = transform;\n    this.verboseOutput = verboseOutput;\n  }\n\n  getJSON() {\n    const uri = this.config.cors\n      ? `https://cors.io/?${this.config.uri}`\n      : this.config.uri;\n    this.debug(`Fetching stations from '${uri}' ...`);\n\n    const headers = this.config.options\n      ? this.config.options.headers\n      : undefined;\n    return ajax.getJSON(uri, headers);\n  }\n\n  getStations(source?: Observable<any>) {\n    return (source || this.getJSON()).pipe(\n      tap((response) => {\n        this.debug('Fetch Response', response);\n      }),\n      this.transform,\n      map<Station[], StationSourceResult>((stations) => {\n        this.debug(`Fetched ${stations.length} stations`);\n\n        return {\n          config: this.config,\n          nodes: stations.map((station) => new StationNode(station)),\n          fetchedAt: moment(),\n        };\n      }),\n      catchError((error = {}) => {\n        this.debug(`Fetch failed: ${error.message || 'Unknown Error'}`, error);\n\n        return of<StationSourceResult>({\n          error,\n          config: this.config,\n          fetchedAt: moment(),\n          nodes: [],\n        });\n      }),\n    );\n  }\n\n  watchStations(\n    reloader: Observable<any> = of(true),\n    interval = 300,\n    source?: Observable<any>,\n  ) {\n    return merge(timer(0, 1000 * interval), reloader).pipe(\n      debounceTime(100),\n      mergeMap(() => this.getStations(source)),\n    );\n  }\n\n  protected debug(message: string, ...args: any[]) {\n    if (this.verboseOutput) {\n      if (args.length) {\n        console.log(message, args);\n      } else {\n        console.log(message);\n      }\n    }\n  }\n}\n","import {mapPropsStream, setObservableConfig, withProps} from 'recompose';\nimport {from, Observable, combineLatest} from 'rxjs';\nimport {\n  map,\n  filter,\n  distinctUntilChanged,\n  startWith,\n  mergeMap,\n} from 'rxjs/operators';\nimport {StationSource, StationSourceResult} from '~/data';\nimport {Subject} from 'rxjs/internal/Subject';\n\nsetObservableConfig({\n  fromESObservable: from as any,\n});\n\nexport interface WithQueryParamProps {\n  params: Map<string, string>;\n}\n\nfunction getUrlParams() {\n  const params = new Map<string, string>();\n  new URLSearchParams(window.location.search).forEach((value, key) => {\n    params.set(key.toLowerCase(), value);\n  });\n  return params;\n}\n\nexport const withQueryParams = withProps<WithQueryParamProps, {}>(() => ({\n  params: getUrlParams(),\n}));\n\ninterface PositionProps {\n  coords?: Coordinates;\n  timestamp?: number;\n  error?: any;\n}\n\nexport interface WithPositionProps {\n  position?: PositionProps;\n}\n\nexport function withPosition(\n  options: PositionOptions = {enableHighAccuracy: true},\n) {\n  const source = new Observable<PositionProps>((observer) => {\n    navigator.geolocation.watchPosition(\n      (position) => {\n        observer.next(position);\n      },\n      (error) => {\n        observer.error({error});\n      },\n      options,\n    );\n  });\n\n  return mapPropsStream<WithPositionProps, {}>((props) => {\n    return combineLatest(\n      source.pipe(startWith(undefined)),\n      props,\n      (position, prev) => {\n        console.log('[position]', position, prev);\n        return {\n          ...prev,\n          position,\n        };\n      },\n    );\n  });\n}\n\nexport interface WithStationsProps {\n  stations?: StationSourceResult;\n  reload(): void;\n}\n\nexport function withStations(defaultKey = 'vancouver') {\n  const reloader = new Subject();\n\n  return mapPropsStream<\n    WithStationsProps,\n    WithStationsProps & WithQueryParamProps\n  >((props) => {\n    const stationsObservable = props.pipe(\n      filter(({params}) => Boolean(params)),\n      map(({params}) => {\n        return {\n          debug: Boolean(params.get('debug')),\n          source:\n            params.get('source') || (params.get('test') ? 'test' : defaultKey),\n        };\n      }),\n      distinctUntilChanged(\n        (a, b) => a.debug === b.debug && a.source === b.source,\n      ),\n      mergeMap(({debug, source}) => {\n        console.log('fetch', {source, debug});\n        return StationSource.create(source, {debug}).watchStations(reloader);\n      }),\n    );\n\n    return combineLatest(stationsObservable, props, (stations, prev) => {\n      console.log('[stations]', stations, prev);\n      return {\n        ...prev,\n        stations,\n        reload: () => {\n          console.log('reload');\n          reloader.next();\n        },\n      };\n    });\n  });\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingContainer\":\"Loader-module--LoadingContainer--1fcG7\",\"Loader\":\"Loader-module--Loader--3Q9b5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingContainer\":\"StationMap-module--LoadingContainer--3ziae\",\"MapContainer\":\"StationMap-module--MapContainer--3ypYa\",\"Map\":\"StationMap-module--Map--foP4U\"};","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header-module--Header--umzWI\",\"HeaderLogo\":\"Header-module--HeaderLogo--2YUir\",\"HeaderContent\":\"Header-module--HeaderContent--1J1nM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"DefaultLayout-module--Container--1-A96\",\"Content\":\"DefaultLayout-module--Content--2xYut\"};"],"sourceRoot":""}