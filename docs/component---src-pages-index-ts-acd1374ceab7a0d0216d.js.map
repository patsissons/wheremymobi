{"version":3,"sources":["webpack:///./src/pages/index.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/layouts/DefaultLayout.module.scss","webpack:///./src/components/StationMap/StationMap.module.scss","webpack:///./src/layouts/DefaultLayout.tsx","webpack:///./src/components/StationMap/components/StationInfo/StationInfo.tsx","webpack:///./src/components/StationMap/components/StationInfo/index.ts","webpack:///./src/components/StationMap/components/StationMarker/StationMarker.tsx","webpack:///./src/components/StationMap/components/StationMarker/index.ts","webpack:///./src/components/StationMap/components/StationMarker/icon.ts","webpack:///./src/components/StationMap/StationMap.tsx","webpack:///./src/components/StationMap/index.ts","webpack:///./plugins/gatsby-source-stations/Station.ts","webpack:///./plugins/gatsby-source-stations/source.ts","webpack:///./src/components/pages/IndexPage/IndexPage.tsx","webpack:///./src/components/pages/IndexPage/index.ts","webpack:///./src/components/pages/NotFoundPage/NotFoundPage.tsx","webpack:///./src/components/pages/NotFoundPage/index.ts","webpack:///./src/components/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","d","query","_components__WEBPACK_IMPORTED_MODULE_0__","m","module","exports","default","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","props","createElement","Consumer","staticQueryData","data","render","children","Error","propTypes","object","string","isRequired","func","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","_loader__WEBPACK_IMPORTED_MODULE_3__","ProdPageRenderer","_ref","location","pageResources","getResourcesForPathname","pathname","shape","Container","Content","Header","HeaderLogo","HeaderContent","LoadingContainer","MapContainer","Map","description","logo","logoUrl","react","className","DefaultLayout_module","href","src","layouts_DefaultLayout","Object","Recompose_esm","_ref3","assign","gatsby_browser_entry","_3229557108","_ref4","site","_ref2","_ref2$site$siteMetada","siteMetadata","objectWithoutPropertiesLoose_default","components_StationInfo","fetchedAt","station","number","toString","padStart","name","operative","bikes","free","total","target","lat","lng","fromNow","components_StationMarker","handleOnClick","showInfo","fillColor","lib","onClick","icon","url","Icon","labelOrigin","x","y","label","text","fontSize","fontWeight","StationMap_StationMap","_React$PureComponent","StationMap","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","renderInfo","_this$props","selectedStation","position","onCloseClick","hideInfo","renderMarker","key","renderMarkers","clustered","markers","from","stations","values","map","MarkerClusterer_default","averageCenter","enableRetinaIcons","gridSize","inheritsLoose_default","prototype","defaultZoom","defaultCenter","components_StationMap","_ref$mapsApiKey","mapsApiKey","reduce","set","googleMapURL","loadingElement","StationMap_module","containerElement","mapElement","undefined","createStationNode","stationData","node","match","exec","Number","e","error_name","message","parseNameAndNumber","coordinates","error_coordinates","parseLatLng","avl_bikes","free_slots","Boolean","style","total_slots","valid","isInteger","isFinite","test","defaultUrl","fetchObservable","_temp","_ref$headers","headers","_ref$verboseOutput","verboseOutput","debug","ajax","getJSON","pipe","tap","response","result","moment_default","catchError","error","of","pages_IndexPage","timer","mergeMap","startWith","_resolveResults","allStation","edges","pages_NotFoundPage"],"mappings":"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","file":"component---src-pages-index-ts-acd1374ceab7a0d0216d.js","sourcesContent":["import {graphql} from 'gatsby';\nimport {IndexPage} from '~/components';\n\nexport const query = graphql`\n  query {\n    ...IndexPageFragment\n  }\n`;\n\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"DefaultLayout-module--Container--3gsXm\",\"Content\":\"DefaultLayout-module--Content--s5QCN\",\"Header\":\"DefaultLayout-module--Header--3j_Vz\",\"HeaderLogo\":\"DefaultLayout-module--HeaderLogo--2R2pt\",\"HeaderContent\":\"DefaultLayout-module--HeaderContent--NWecx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingContainer\":\"StationMap-module--LoadingContainer--3ziae\",\"MapContainer\":\"StationMap-module--MapContainer--3ypYa\",\"Map\":\"StationMap-module--Map--foP4U\"};","import * as React from 'react';\nimport {graphql, Link, StaticQuery} from 'gatsby';\nimport {compose, fromRenderProps} from 'recompose';\n\nimport * as styles from './DefaultLayout.module.scss';\n\nexport interface HeaderProps {\n  description: string;\n  logo: string;\n  logoUrl: string;\n}\n\nexport function Header({description, logo, logoUrl}: HeaderProps) {\n  return (\n    <div className={styles.Header}>\n      <div className={styles.HeaderLogo}>\n        <a href={logoUrl}>\n          <img src={logo} />\n        </a>\n      </div>\n      <div className={styles.HeaderContent}>\n        <h1>{description}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport interface Props {\n  site: {\n    siteMetadata: HeaderProps;\n  };\n}\n\nexport function DefaultLayout({\n  site: {\n    siteMetadata: {description, logo, logoUrl},\n  },\n  ...props\n}: Props) {\n  return (\n    <div className={styles.Container}>\n      <Header description={description} logo={logo} logoUrl={logoUrl} />\n      <div className={styles.Content} {...props} />\n    </div>\n  );\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        description\n        logo\n        logoUrl\n      }\n    }\n  }\n`;\n\nfunction DefaultLayoutQuery({...props}: any) {\n  return <StaticQuery query={query} {...props} />;\n}\n\nexport default compose<Props, {}>(\n  fromRenderProps<Props, {}>(DefaultLayoutQuery, ({site}) => ({site}))\n)(DefaultLayout);\n","import * as React from 'react';\nimport moment from 'moment';\nimport {StationNode} from '~/gatsby-source-stations/Station';\n\nexport interface Props {\n  fetchedAt: moment.Moment;\n  station: StationNode;\n}\n\nexport function StationInfo({fetchedAt, station}: Props) {\n  return (\n    <div>\n      <ul>\n        <li>{`[${station.number.toString().padStart(4, '0')}] ${station.name}${\n          station.operative ? '' : ' (CLOSED)'\n        }`}</li>\n        <li>{`${station.bikes} bikes / ${station.free} slots (${\n          station.total\n        } total)`}</li>\n        <li>\n          <a\n            target=\"_blank\"\n            href={`https://www.google.com/maps/@${station.lat},${\n              station.lng\n            },15z`}\n          >{`${station.lat}, ${station.lng}`}</a>\n        </li>\n        <li>{`Last Updated: ${fetchedAt.fromNow()}`}</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default StationInfo;\n","import StationInfo, {Props} from './StationInfo';\n\nexport type StationInfoProps = Props;\nexport default StationInfo;\n","import * as React from 'react';\nimport {Marker, MarkerProps} from 'react-google-maps';\nimport {compose, withHandlers} from 'recompose';\nimport {StationNode} from '~/gatsby-source-stations/Station';\nimport Icon from './icon';\n\nexport interface ActionProps {\n  showInfo(station: StationNode): void;\n}\n\nexport interface Props extends ActionProps, MarkerProps {\n  station: StationNode;\n}\n\ninterface HandlerProps {\n  handleOnClick(): void;\n}\n\ntype ComposedProps = Props & HandlerProps;\n\n// const defaultIcon = {\n//   // path:\n//   //   'M49.609,2.168c-22.481,0-40.701,18.21-40.701,40.694c0,17.634,11.226,32.592,26.904,38.244l5.995,7.457  l7.408,9.207l7.404-9.207l5.671-7.049c16.256-5.328,28.013-20.604,28.013-38.652C90.303,20.378,72.074,2.168,49.609,2.168z   M49.608,75.842c-18.22,0-32.97-14.77-32.97-32.98c0-18.21,14.75-32.979,32.97-32.979c18.21-0.001,32.967,14.769,32.967,32.979  C82.575,61.072,67.818,75.842,49.608,75.842z',\n//   // url: `data:image/svg+xml;utf-8,<svg width=\"100px\" height=\"100px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\" fill=\"#000\">\n//   //   <g>\n//   //    <path id=\"bg\" d=\"m49.609,2.168c-22.481,0 -40.701,18.21 -40.701,40.694c0,17.634 11.226,32.592 26.904,38.244l5.995,7.457l7.408,9.207l7.404,-9.207l5.671,-7.049c16.256,-5.328 28.013,-20.604 28.013,-38.652c0,-22.484 -18.229,-40.694 -40.694,-40.694z\" fill=\"#fff\"/>\n//   //    <path id=\"fill\" d=\"m49.609,2.168c-22.481,0 -40.701,18.21 -40.701,40.694c0,17.634 11.226,32.592 26.904,38.244l5.995,7.457l7.408,9.207l7.404,-9.207l5.671,-7.049c16.256,-5.328 28.013,-20.604 28.013,-38.652c0,-22.484 -18.229,-40.694 -40.694,-40.694zm-0.001,73.674c-18.22,0 -32.97,-14.77 -32.97,-32.98c0,-18.21 14.75,-32.979 32.97,-32.979c18.21,-0.001 32.967,14.769 32.967,32.979c0,18.21 -14.757,32.98 -32.967,32.98z\"/>\n//   //   </g>\n//   //  </svg>`,\n//   fillColor: '#000000',\n//   fillOpacity: 1,\n//   strokeWeight: 0,\n//   scale: 1,\n// };\n\nexport function StationMarker({\n  handleOnClick,\n  showInfo,\n  station,\n  ...props\n}: ComposedProps) {\n  const fillColor =\n    station.bikes > 10\n      ? 'forestgreen'\n      : station.bikes > 5\n        ? 'coral'\n        : 'crimson';\n\n  return (\n    <Marker\n      onClick={handleOnClick}\n      icon={{\n        url: Icon({fillColor}),\n        labelOrigin: {x: 49, y: 33},\n      }}\n      label={{\n        text: `${station.bikes} | ${station.free}`,\n        fontSize: '0.75rem',\n        fontWeight: 'bold',\n      }}\n      // labelContent={`${station.bikes} / ${station.free}`}\n      // labelAnchor={{x: 0, y: 0}}\n      // labelStyle={{fontSize: '20rem'} as any}\n      {...props}\n    />\n  );\n}\n\nexport default compose<ComposedProps, Props>(\n  withHandlers({\n    handleOnClick({showInfo, station}: Props) {\n      return () => showInfo(station);\n    },\n  }),\n)(StationMarker);\n","import StationMarker, {ActionProps, Props} from './StationMarker';\n\nexport type StationMarkerActionProps = ActionProps;\nexport type StationMarkerProps = Props;\nexport default StationMarker;\n","export interface Props {\n  fillColor: string;\n}\n\nexport default function Icon({fillColor}: Props) {\n  return `data:image/svg+xml;utf-8,<svg width=\"100px\" height=\"100px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\" fill=\"${fillColor}\">\n  <path id=\"bg\" fill=\"#ffffff\" d=\"m77.438,31.70225c-0.139,-5.802 -1.797,-10.248 -4.202,-14.012c-2.307,-3.607 -5.341,-6.666 -9.258,-8.958c-4.793,-2.803 -11.556,-4.639 -18.766,-3.553c-8.819,1.33 -15.391,6.39 -19.316,12.561c-2.385,3.752 -4.039,8.341 -4.152,14.062c-0.117,5.854 1.706,10.369 3.954,14.261c1.122,1.948 2.132,3.929 3.302,5.805c3.504,5.621 7.291,10.97 10.559,16.765c4.406,7.812 8.044,16.242 10.108,26.371c2.984,-15.367 9.802,-26.583 17.063,-37.58c2.439,-3.692 4.867,-7.382 6.806,-11.41c0.993,-2.063 2.107,-3.996 2.803,-6.306c0.684,-2.283 1.172,-5.035 1.099,-8.006z\"/>\n  <path id=\"fill\" d=\"M77.438,31.834c-0.139-5.802-1.797-10.248-4.202-14.012c-2.307-3.607-5.341-6.666-9.258-8.958   c-4.793-2.803-11.556-4.639-18.766-3.553c-8.819,1.33-15.391,6.39-19.316,12.561c-2.385,3.752-4.039,8.341-4.152,14.062   c-0.117,5.854,1.706,10.369,3.954,14.261C26.82,48.143,27.83,50.124,29,52c3.504,5.621,7.291,10.97,10.559,16.765   c4.406,7.812,8.044,16.242,10.108,26.371c2.984-15.367,9.802-26.583,17.063-37.58c2.439-3.692,4.867-7.382,6.806-11.41   c0.993-2.063,2.107-3.996,2.803-6.306C77.023,37.557,77.511,34.805,77.438,31.834z M49.685,52.47   c-11.004,0-19.923-8.92-19.923-19.923c0-11.002,8.919-19.922,19.923-19.922c11.003,0,19.923,8.92,19.923,19.922   C69.607,43.55,60.688,52.47,49.685,52.47z\"/>\n  </svg>`;\n}\n","import * as React from 'react';\nimport moment from 'moment';\nimport {compose, mapProps, withProps, withStateHandlers} from 'recompose';\nimport {\n  BicyclingLayer,\n  GoogleMap,\n  InfoWindow,\n  withScriptjs,\n  WithScriptjsProps,\n  withGoogleMap,\n  WithGoogleMapProps,\n} from 'react-google-maps';\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer';\nimport {StationNode} from '~/gatsby-source-stations/Station';\nimport {StationInfo, StationMarker} from './components';\nimport {StationMarkerActionProps} from './components/StationMarker';\n\nimport * as styles from './StationMap.module.scss';\n\ninterface FetchProps {\n  fetchedAt: moment.Moment;\n}\n\nexport interface Props extends FetchProps {\n  stations: StationNode[];\n  mapsApiKey?: string;\n}\n\ninterface MappedProps extends FetchProps {\n  stations: Map<number, StationNode>;\n}\n\ninterface ActionProps extends StationMarkerActionProps {\n  hideInfo(): void;\n}\n\ninterface StateProps {\n  selectedStation?: StationNode;\n}\n\ntype ComposedProps = MappedProps &\n  ActionProps &\n  StateProps &\n  WithScriptjsProps &\n  WithGoogleMapProps;\n\nexport class StationMap extends React.PureComponent<ComposedProps> {\n  renderInfo = () => {\n    const {fetchedAt, selectedStation: station} = this.props;\n\n    return (\n      (station && (\n        <InfoWindow\n          position={{lat: station.lat, lng: station.lng}}\n          onCloseClick={this.props.hideInfo}\n        >\n          <StationInfo fetchedAt={fetchedAt} station={station} />\n        </InfoWindow>\n      )) ||\n      false\n    );\n  };\n\n  renderMarker = (station: StationNode) => {\n    return (\n      <StationMarker\n        key={station.number}\n        station={station}\n        showInfo={this.props.showInfo}\n        position={{lat: station.lat, lng: station.lng}}\n      />\n    );\n  };\n\n  renderMarkers = (clustered = true) => {\n    const markers = Array.from(this.props.stations.values()).map(\n      this.renderMarker,\n    );\n\n    return clustered ? (\n      <MarkerClusterer averageCenter enableRetinaIcons gridSize={30}>\n        {markers}\n      </MarkerClusterer>\n    ) : (\n      markers\n    );\n  };\n\n  render() {\n    return (\n      <GoogleMap\n        defaultZoom={13}\n        defaultCenter={{lat: 49.279627, lng: -123.121116}}\n        onClick={this.props.hideInfo}\n      >\n        <BicyclingLayer />\n        {this.renderInfo()}\n        {this.renderMarkers()}\n      </GoogleMap>\n    );\n  }\n}\n\nexport default compose<ComposedProps, Props>(\n  mapProps<MappedProps, Props>(\n    ({\n      fetchedAt,\n      mapsApiKey = 'AIzaSyBXrYScIU6sWYUWLLlovYhzq-bLzwTgAoc',\n      stations,\n    }) => {\n      return {\n        fetchedAt,\n        stations: stations.reduce((map, station) => {\n          return map.set(station.number, station);\n        }, new Map<number, StationNode>()),\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${mapsApiKey}&v=3.exp&libraries=geometry,drawing,places`,\n      };\n    },\n  ),\n  withProps({\n    loadingElement: <div className={styles.LoadingContainer} />,\n    containerElement: <div className={styles.MapContainer} />,\n    mapElement: <div className={styles.Map} />,\n  }),\n  withStateHandlers<StateProps, any, ComposedProps>(\n    {},\n    {\n      showInfo() {\n        return (selectedStation: StationNode) => ({selectedStation});\n      },\n      hideInfo() {\n        return () => ({selectedStation: undefined});\n      },\n    },\n  ),\n  withScriptjs,\n  withGoogleMap,\n)(StationMap);\n","import StationMap, {Props} from './StationMap';\n\nexport type StationMapProps = Props;\nexport default StationMap;\n","export interface StationData {\n  name: string;\n  coordinates: string;\n  total_slots: number;\n  free_slots: number;\n  avl_bikes: number;\n  operative: boolean;\n  style: string;\n}\n\nexport interface StationNodeNameAndNumber {\n  name: string;\n  number: number;\n  error_name?: string;\n}\n\nexport interface StationNodeLatLng {\n  lat: number;\n  lng: number;\n  error_coordinates?: string;\n}\n\nexport interface UnvalidatedStationNode\n  extends StationNodeNameAndNumber,\n    StationNodeLatLng {\n  bikes: number;\n  free: number;\n  operative: boolean;\n  style: string;\n  total: number;\n}\n\nexport interface StationNode extends UnvalidatedStationNode {\n  valid: boolean;\n}\n\nexport function parseNameAndNumber({\n  name,\n}: StationData): StationNodeNameAndNumber {\n  try {\n    const match = /^(\\d+)\\s+(.*)$/.exec(name);\n\n    if (!match) {\n      throw new Error(`Unable to parse \"number name\" from ${name}`);\n    }\n\n    return {\n      name: match[2],\n      number: Number(match[1]),\n    };\n  } catch (e) {\n    return {\n      name,\n      number: 0,\n      error_name: e.message,\n    };\n  }\n}\n\nexport function parseLatLng({coordinates}: StationData): StationNodeLatLng {\n  try {\n    const match = /^(-?\\d+\\.\\d+),\\s+(-?\\d+\\.\\d+)$/.exec(coordinates);\n\n    if (!match) {\n      throw new Error(`Unable to parse \"lat, lng\" from ${coordinates}`);\n    }\n\n    return {\n      lat: Number(match[1]),\n      lng: Number(match[2]),\n    };\n  } catch (e) {\n    return {\n      lat: 0,\n      lng: 0,\n      error_coordinates: e.message,\n    };\n  }\n}\n\nexport function validate(node: UnvalidatedStationNode): StationNode {\n  return {\n    ...node,\n    valid: Boolean(\n      Number.isInteger(node.bikes) &&\n        Number.isInteger(node.free) &&\n        Number.isInteger(node.total) &&\n        Number.isInteger(node.number) &&\n        Number.isFinite(node.lat) &&\n        Number.isFinite(node.lng) &&\n        /^\\w/.test(node.name) &&\n        !node.error_coordinates &&\n        !node.error_name\n    ),\n  };\n}\n\nexport function createStationNode(stationData: StationData): StationNode {\n  return validate({\n    ...parseNameAndNumber(stationData),\n    ...parseLatLng(stationData),\n    bikes: stationData.avl_bikes,\n    free: stationData.free_slots,\n    operative: Boolean(stationData.operative),\n    style: stationData.style,\n    total: stationData.total_slots,\n  });\n}\n","import moment from 'moment';\nimport {Observable, of} from 'rxjs';\nimport {ajax} from 'rxjs/ajax';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {createStationNode, StationData, StationNode} from './Station';\n\nexport interface FetchResponse {\n  result: StationData[];\n}\n\nexport interface FetchResult {\n  error?: any;\n  fetchedAt: moment.Moment;\n  stations: StationNode[];\n}\n\nexport interface FetchOptions {\n  headers?: {};\n  verboseOutput?: boolean;\n}\n\nexport const defaultUrl = 'http://vancouver-ca.smoove.pro/api-public/stations';\n\nexport function fetch(url?: string, options?: FetchOptions) {\n  return fetchObservable(url, options).toPromise();\n}\n\nexport function fetchObservable(\n  url = defaultUrl,\n  {\n    headers = {},\n    verboseOutput = process.env.NODE_ENV !== 'production',\n  }: FetchOptions = {},\n): Observable<FetchResult> {\n  const debug = (message: string, ...args: any[]) => {\n    if (verboseOutput) {\n      if (args.length) {\n        console.log(message, args);\n      } else {\n        console.log(message);\n      }\n    }\n  };\n\n  debug(`Fetching stations from '${url}' ...`);\n\n  return ajax.getJSON<FetchResponse>(`https://cors.io/?${url}`, headers).pipe(\n    tap((response) => {\n      debug('Fetch Response', response);\n\n      if (!response || !response.result) {\n        throw new Error(\n          `Invalid Response: ${response ? 'Missing result' : 'Empty'}`,\n        );\n      }\n\n      debug(`Fetched ${response.result.length} stations`);\n    }),\n    map(({result}) => {\n      return {\n        fetchedAt: moment(),\n        stations: result.map((stationData) => {\n          return createStationNode(stationData);\n        }),\n      };\n    }),\n    catchError((error) => {\n      debug(`Fetch failed: ${error.message}`, error);\n\n      return of({\n        error,\n        fetchedAt: moment(),\n        stations: [],\n      });\n    }),\n  );\n}\n","import * as React from 'react';\nimport {graphql} from 'gatsby';\nimport moment from 'moment';\nimport {\n  compose,\n  // mapPropsStreamWithConfig,\n  mapPropsStream,\n} from 'recompose';\n// import rxjsConfig from 'recompose/rxjsObservableConfig';\nimport {timer} from 'rxjs';\nimport {} from 'rxjs/ajax';\nimport {map, mergeMap, startWith} from 'rxjs/operators';\nimport {DefaultLayout} from '~/layouts';\nimport StationMap from '~/components/StationMap';\nimport {fetch} from '~/gatsby-source-stations';\nimport {FetchResult, fetchObservable} from '~/gatsby-source-stations/source';\nimport {createStationNode, StationNode} from '~/gatsby-source-stations/Station';\n\nexport interface QueryProps {\n  allStation: {\n    edges: {\n      node: StationNode;\n    }[];\n  };\n}\n\nexport interface Props {\n  data?: QueryProps;\n  result?: FetchResult;\n}\n\nexport function IndexPage({data, result}: Props) {\n  if (!data && !result) {\n    return <div>Loading...</div>;\n  }\n\n  const resolveResults = (): FetchResult => {\n    if (result && result.fetchedAt && result.stations) {\n      return result;\n    }\n\n    if (data) {\n      return {\n        fetchedAt: moment(),\n        stations: data.allStation.edges.map(({node}) => node),\n      };\n    }\n\n    return {\n      error: new Error('fail'),\n      fetchedAt: moment(),\n      stations: [],\n    };\n  };\n\n  const {error, fetchedAt, stations} = resolveResults();\n\n  return (\n    <DefaultLayout>\n      {Boolean(error) && <div>{error.message}</div>}\n      <StationMap fetchedAt={fetchedAt} stations={stations} />\n    </DefaultLayout>\n  );\n}\n\nexport const fragment = graphql`\n  fragment IndexPageFragment on Query {\n    allStation {\n      totalCount\n      edges {\n        node {\n          id\n          number\n          name\n          lat\n          lng\n          bikes\n          free\n          total\n          operative\n          style\n          valid\n        }\n      }\n    }\n  }\n`;\n\nexport default compose<Props, {}>(\n  mapPropsStream(() => {\n    return timer(0, 1000 * 60 * 5).pipe(\n      mergeMap(() => fetchObservable()),\n      map((result) => {\n        return {\n          result,\n        };\n      }),\n      startWith({}),\n    );\n  }),\n)(IndexPage);\n","import IndexPage, {Props} from './IndexPage';\n\nexport type IndexPageProps = Props;\nexport default IndexPage;\n","import * as React from 'react';\n\nexport function NotFoundPage() {\n  return (\n    <div>\n      <h1>NOT FOUND</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import NotFoundPage from './NotFoundPage';\n\nexport default NotFoundPage;\n","export {IndexPage, NotFoundPage} from './pages';\nexport {default as StationMap} from './StationMap';\n"],"sourceRoot":""}