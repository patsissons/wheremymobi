{"version":3,"sources":["webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Loader/Loader.tsx","webpack:///./src/components/Loader/index.ts","webpack:///./src/components/StationMap/decorators.ts","webpack:///./src/packages/react-google-maps-controls/ControlSite/ControlSite.tsx","webpack:///./src/packages/react-google-maps-controls/ControlSite/index.ts","webpack:///./src/packages/react-google-maps-controls/Control/Control.tsx","webpack:///./src/packages/react-google-maps-controls/Control/index.ts","webpack:///./src/components/StationMap/components/GpsMarker/GpsMarker.tsx","webpack:///./src/components/StationMap/components/GpsMarker/index.ts","webpack:///./src/components/StationMap/components/StationMarker/icon.ts","webpack:///./src/components/StationMap/components/StationMarker/StationMarker.tsx","webpack:///./src/components/StationMap/components/StationMarker/index.ts","webpack:///./src/components/StationMap/components/StationInfo/StationInfo.tsx","webpack:///./src/components/StationMap/components/StationInfo/index.ts","webpack:///./src/components/StationMap/StationMap.tsx","webpack:///./src/components/StationMap/index.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/layouts/DefaultLayout/components/Header/Header.tsx","webpack:///./src/layouts/DefaultLayout/components/Header/index.ts","webpack:///./src/layouts/DefaultLayout/DefaultLayout.tsx","webpack:///./src/layouts/DefaultLayout/index.ts","webpack:///./src/station/Node.ts","webpack:///./src/data/transform/Smoove.ts","webpack:///./src/station/Station.ts","webpack:///./src/data/config.ts","webpack:///./src/data/StationSource.ts","webpack:///./src/components/pages/IndexPage/decorators.ts","webpack:///./src/components/pages/IndexPage/IndexPage.tsx","webpack:///./src/components/pages/IndexPage/index.ts","webpack:///./src/components/pages/NotFoundPage/NotFoundPage.tsx","webpack:///./src/components/pages/NotFoundPage/index.ts","webpack:///./src/components/pages/index.ts","webpack:///./.cache/public-page-renderer-prod.js"],"names":["m","module","exports","require","default","loaders","compose","Loader","withProps","_ref2","name","Math","floor","random","length","_ref","Boolean","react","className","styles","dist_default","a","withMapsApiKey","defaultProps","mapsApiKey","ControlSite","_React$PureComponent","_this","_len","arguments","args","Array","_key","call","apply","this","concat","containerRef","React","inheritsLoose_default","_proto","prototype","componentDidMount","_this$props$position","props","position","google","maps","ControlPosition","BOTTOM_CENTER","current","map","controls","push","componentWillUnmount","_this$props$position2","removeAt","getArray","indexOf","render","children","createPortal","ref","getDiv","createClass_default","key","get","context","MAP","contextTypes","[object Object]","PropTypes","Control","onClick","objectWithoutPropertiesLoose_default","Object","assign","type","GpsMarker","_ref$color","color","coords","timestamp","accuracy","heading","lat","latitude","lng","longitude","LatLng","lib","center","radius","options","fillColor","strokeColor","fillOpacity","strokeWeight","icon","anchor","Point","path","SymbolPath","FORWARD_CLOSED_ARROW","rotation","scale","zIndex","Marker","MAX_ZINDEX","marker","trim","markerWithFillColor","station","encodeURIComponent","replace","bikes","createIcon","url","labelOrigin","StationMarker","withHandlers","handleOnClick","showInfo","node","label","text","free","fontSize","fontWeight","StationInfo","fetchedAt","number","toString","padStart","operative","total","rel","target","href","fromNow","StationMap","state","followGps","handleDrag","setState","handleGpsCenter","renderInfo","_this$props","selectedNode","_selectedNode$station","onCloseClick","hideInfo","pixelOffset","Size","components_StationInfo","renderMarker","isValid","console","debug","components_StationMarker","renderMarkers","clustered","markers","from","nodes","values","MarkerClusterer_default","averageCenter","enableRetinaIcons","gridSize","maxZoom","renderPosition","components_GpsMarker","_this$props2","defaultCenter","defaultZoom","gpsCenter","onDrag","zoom","gpsZoom","react_google_maps_controls_ControlSite","react_google_maps_controls_Control","style","backgroundImage","backgroundPositionX","backgroundRepeat","width","height","_position$coords","min","max","log2","withStateHandlers","undefined","googleMapURL","loadingElement","containerElement","mapElement","mapProps","reduce","set","Map","withScriptjs","withGoogleMap","StaticQueryContext","createContext","StaticQuery","react_default","createElement","Consumer","staticQueryData","data","query","propTypes","object","string","isRequired","func","Header","description","logo","logoUrl","alt","src","DefaultLayout","errors","fromRenderProps","gatsby_browser_entry_StaticQuery","_3229557108","_ref3","site","_ref$site$siteMetadat","siteMetadata","components_Header","StationNode","Number","isInteger","isFinite","test","every","x","create","createStation","avl_bikes","free_slots","total_slots","match","exec","Error","error","parseNameAndNumber","parseLatLng","coordinates","StationSourceType","result","configMap","location","uri","cors","StationSource","config","transform","verboseOutput","process","configOrKey","toLowerCase","getConfig","Smoove","mapTransform","nearest","distance","geometry","spherical","computeDistanceBetween","sort","left","right","getConfigByLocation","getJSON","headers","ajax","getStations","source","pipe","tap","response","stations","moment","catchError","message","of","watchStations","reloader","interval","_this2","merge","timer","debounceTime","mergeMap","log","getUrlParams","window","params","URLSearchParams","search","forEach","value","setObservableConfig","fromESObservable","withQueryParams","IndexPage","enableHighAccuracy","Subject","reload","next","mapPropsStream","navigator","geolocation","filter","Observable","observer","watchPosition","startWith","combineLatest","prev","withPosition","defaultKey","distinctUntilChanged","withStations","layouts_DefaultLayout","components_StationMap","components_Loader","NotFoundPage","__webpack_require__","d","__webpack_exports__","pages_IndexPage","pages_NotFoundPage","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"2-24580dfefe3cb6f0fa99.js","sourcesContent":["const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\n\nimport Spinner, {SpinnerProps} from 'react-spinkit';\nimport {compose, withProps} from 'recompose';\n\nimport * as styles from './Loader.module.scss';\n\nconst loaders: Required<SpinnerProps['name']>[] = [\n  'double-bounce',\n  'chasing-dots',\n  'circle',\n  'cube-grid',\n];\n\nfunction randomLoaderName() {\n  return loaders[Math.floor(Math.random() * loaders.length)];\n}\n\nexport interface Props {\n  name?: SpinnerProps['name'];\n}\n\nexport function Loader({name}: Props) {\n  return (\n    Boolean(name) && (\n      <div className={styles.LoadingContainer}>\n        <Spinner className={styles.Loader} name={name} />\n      </div>\n    )\n  );\n}\n\nexport default compose<Props, {}>(\n  withProps(({name}: Props) => ({name: name || randomLoaderName()})),\n)(Loader as any);\n","import Loader, {Props} from './Loader';\n\nexport type LoaderProps = Props;\nexport default Loader;\n","import {defaultProps} from 'recompose';\n\nexport interface WithMapsApiKeyProps {\n  mapsApiKey: string;\n}\n\nexport const withMapsApiKey = defaultProps({\n  mapsApiKey: 'AIzaSyBXrYScIU6sWYUWLLlovYhzq-bLzwTgAoc',\n});\n","import * as React from 'react';\n\nimport * as PropTypes from 'prop-types';\nimport {createPortal} from 'react-dom';\nimport {MAP} from 'react-google-maps/lib/constants';\nimport {compose} from 'recompose';\n\nimport * as styles from './ControlSite.module.scss';\n\nexport interface Props {\n  position?: google.maps.ControlPosition;\n}\n\nexport class ControlSite extends React.PureComponent<Props> {\n  static contextTypes = {[MAP]: PropTypes.object};\n\n  private readonly containerRef = React.createRef<HTMLDivElement>();\n\n  get map(): google.maps.Map {\n    return this.context[MAP];\n  }\n\n  componentDidMount() {\n    const {position = google.maps.ControlPosition.BOTTOM_CENTER} = this.props;\n\n    if (this.containerRef.current) {\n      this.map.controls[position].push(this.containerRef.current);\n    }\n  }\n\n  componentWillUnmount() {\n    const {position = google.maps.ControlPosition.BOTTOM_CENTER} = this.props;\n\n    if (this.containerRef.current) {\n      this.map.controls[position].removeAt(\n        this.map.controls[position]\n          .getArray()\n          .indexOf(this.containerRef.current),\n      );\n    }\n  }\n\n  render() {\n    const {children} = this.props;\n\n    return createPortal(\n      <div className={styles.Container} ref={this.containerRef}>\n        {children}\n      </div>,\n      this.map.getDiv(),\n    );\n  }\n}\n\nexport default ControlSite;\n","import ControlSite from './ControlSite';\n\nexport default ControlSite;\n","import * as React from 'react';\n\nimport * as styles from './Control.module.scss';\n\nexport interface Props {\n  children?: React.ReactNode;\n  onClick?(): void;\n}\n\nexport function Control({onClick, ...props}: Props) {\n  if (onClick) {\n    return (\n      <button\n        type=\"button\"\n        onClick={onClick}\n        className={styles.Container}\n        {...props}\n      />\n    );\n  }\n  return <div className={styles.Container} {...props} />;\n}\n\nexport default Control;\n","import Control from './Control';\n\nexport default Control;\n","import * as React from 'react';\n\nimport {Circle, Marker, MarkerProps} from 'react-google-maps';\n\nexport interface Props extends MarkerProps {\n  color?: string;\n  coords: Coordinates;\n  timestamp: number;\n}\n\ntype ComposedProps = Props;\n\nexport function GpsMarker({\n  color = 'magenta',\n  coords,\n  timestamp,\n  ...props\n}: ComposedProps) {\n  const {accuracy, heading, latitude: lat, longitude: lng} = coords;\n\n  const position = new google.maps.LatLng(lat, lng);\n\n  return (\n    <>\n      <Circle\n        center={position}\n        radius={accuracy}\n        options={{\n          fillColor: color,\n          strokeColor: color,\n          fillOpacity: 0.25,\n          strokeWeight: 1,\n        }}\n      />\n      <Marker\n        icon={{\n          anchor: new google.maps.Point(0, 2.6),\n          path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n          strokeColor: color,\n          fillColor: color,\n          fillOpacity: 1,\n          rotation: heading,\n          scale: 10,\n          strokeWeight: 1,\n        }}\n        position={new google.maps.LatLng(lat, lng)}\n        zIndex={google.maps.Marker.MAX_ZINDEX}\n        {...props}\n      />\n    </>\n  );\n}\n\nexport default GpsMarker;\n","import GpsMarker, {Props} from './GpsMarker';\n\nexport type GpsMarkerProps = Props;\nexport default GpsMarker;\n","import {Station} from '~/station';\n\nconst marker = `\n<svg width=\"100px\" height=\"100px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\n  <path id=\"bg\" fill=\"#ffffff\" d=\"m77.438,31.70225c-0.139,-5.802 -1.797,-10.248 -4.202,-14.012c-2.307,-3.607 -5.341,-6.666 -9.258,-8.958c-4.793,-2.803 -11.556,-4.639 -18.766,-3.553c-8.819,1.33 -15.391,6.39 -19.316,12.561c-2.385,3.752 -4.039,8.341 -4.152,14.062c-0.117,5.854 1.706,10.369 3.954,14.261c1.122,1.948 2.132,3.929 3.302,5.805c3.504,5.621 7.291,10.97 10.559,16.765c4.406,7.812 8.044,16.242 10.108,26.371c2.984,-15.367 9.802,-26.583 17.063,-37.58c2.439,-3.692 4.867,-7.382 6.806,-11.41c0.993,-2.063 2.107,-3.996 2.803,-6.306c0.684,-2.283 1.172,-5.035 1.099,-8.006z\"/>\n  <path id=\"fill\" fill=\"currentColor\" d=\"M77.438,31.834c-0.139-5.802-1.797-10.248-4.202-14.012c-2.307-3.607-5.341-6.666-9.258-8.958   c-4.793-2.803-11.556-4.639-18.766-3.553c-8.819,1.33-15.391,6.39-19.316,12.561c-2.385,3.752-4.039,8.341-4.152,14.062   c-0.117,5.854,1.706,10.369,3.954,14.261C26.82,48.143,27.83,50.124,29,52c3.504,5.621,7.291,10.97,10.559,16.765   c4.406,7.812,8.044,16.242,10.108,26.371c2.984-15.367,9.802-26.583,17.063-37.58c2.439-3.692,4.867-7.382,6.806-11.41   c0.993-2.063,2.107-3.996,2.803-6.306C77.023,37.557,77.511,34.805,77.438,31.834z M49.685,52.47   c-11.004,0-19.923-8.92-19.923-19.923c0-11.002,8.919-19.922,19.923-19.922c11.003,0,19.923,8.92,19.923,19.922   C69.607,43.55,60.688,52.47,49.685,52.47z\"/>\n</svg>`.trim();\n\nexport function getFillColor({bikes}: Station): string {\n  if (bikes > 10) {\n    return 'forestgreen';\n  }\n\n  if (bikes > 5) {\n    return 'coral';\n  }\n\n  return 'crimson';\n}\n\nfunction markerWithFillColor(station: Station) {\n  return `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(\n    marker.replace(/fill=\"currentColor\"/, `fill=\"${getFillColor(station)}\"`),\n  )}`;\n}\n\nexport function createIcon(station: Station): google.maps.Icon {\n  return {\n    url: markerWithFillColor(station),\n    labelOrigin: new google.maps.Point(49, 33),\n  };\n}\n","import * as React from 'react';\n\nimport {Marker, MarkerProps} from 'react-google-maps';\nimport {compose, withHandlers} from 'recompose';\nimport {StationNode} from '~/station';\nimport {createIcon} from './icon';\n\nexport interface SelectedStationProps {\n  selectedNode?: StationNode;\n}\n\nexport interface ActionProps {\n  showInfo(station: StationNode): SelectedStationProps;\n}\n\nexport interface Props extends ActionProps, MarkerProps {\n  node: StationNode;\n}\n\ninterface HandlerProps {\n  handleOnClick(): void;\n}\n\ntype ComposedProps = Props & HandlerProps;\n\nexport function StationMarker({\n  handleOnClick,\n  showInfo,\n  node: {station},\n  ...props\n}: ComposedProps) {\n  const {lat, lng} = station;\n\n  return (\n    <Marker\n      onClick={handleOnClick}\n      icon={createIcon(station)}\n      label={{\n        text: `${station.bikes} | ${station.free}`,\n        fontSize: '0.75rem',\n        fontWeight: 'bold',\n      }}\n      position={new google.maps.LatLng(lat, lng)}\n      {...props}\n    />\n  );\n}\n\nexport default compose<ComposedProps, Props>(\n  withHandlers({\n    handleOnClick({showInfo, node}: Props) {\n      return () => showInfo(node);\n    },\n  }),\n)(StationMarker);\n","import StationMarker, {\n  ActionProps,\n  Props,\n  SelectedStationProps,\n} from './StationMarker';\n\nexport type SelectedStationProps = SelectedStationProps;\nexport type StationMarkerActionProps = ActionProps;\nexport type StationMarkerProps = Props;\nexport default StationMarker;\n","import * as React from 'react';\n\nimport moment from 'moment';\nimport {Station} from '~/station';\n\nexport interface Props {\n  fetchedAt: moment.Moment;\n  station: Station;\n}\n\nexport function StationInfo({fetchedAt, station}: Props) {\n  return (\n    <div>\n      <ul>\n        <li>{`[${station.number.toString().padStart(4, '0')}] ${station.name}${\n          station.operative ? '' : ' (CLOSED)'\n        }`}</li>\n        <li>{`${station.bikes} bikes / ${station.free} slots (${\n          station.total\n        } total)`}</li>\n        <li>\n          <a\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            href={`https://www.google.com/maps/dir/?api=${1}&travelmode=bicycling&destination=${\n              station.lat\n            },${station.lng}`}\n          >{`${station.lat}, ${station.lng}`}</a>\n        </li>\n        <li>{`Last Updated: ${fetchedAt.fromNow()}`}</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default StationInfo;\n","import StationInfo, {Props} from './StationInfo';\n\nexport type StationInfoProps = Props;\nexport default StationInfo;\n","import * as React from 'react';\n\nimport moment from 'moment';\nimport {\n  compose,\n  mapProps,\n  withProps,\n  withStateHandlers,\n  defaultProps,\n  StateHandlerMap,\n} from 'recompose';\nimport {\n  BicyclingLayer,\n  GoogleMap,\n  InfoWindow,\n  withScriptjs,\n  WithScriptjsProps,\n  withGoogleMap,\n  WithGoogleMapProps,\n} from 'react-google-maps';\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer';\nimport {StationNode} from '~/station';\nimport {Control, ControlSite} from 'react-google-maps-controls';\nimport {\n  GpsMarker,\n  GpsMarkerProps,\n  SelectedStationProps,\n  StationInfo,\n  StationMarker,\n  StationMarkerActionProps,\n} from './components';\nimport {withMapsApiKey, WithMapsApiKeyProps} from './decorators';\n\nimport * as styles from './StationMap.module.scss';\n\ninterface FetchProps {\n  fetchedAt: moment.Moment;\n  location: google.maps.LatLngLiteral;\n}\n\ninterface PositionProps {\n  position: Partial<GpsMarkerProps> | undefined;\n}\n\nexport interface Props extends FetchProps, PositionProps {\n  nodes: StationNode[];\n  reload(): void;\n}\n\ninterface DefaultProps {\n  defaultCenter: google.maps.LatLngLiteral;\n  defaultZoom: number;\n}\n\ninterface InjectedProps {\n  nodes: Map<number, StationNode>;\n}\n\ninterface ActionProps\n  extends StationMarkerActionProps,\n    StateHandlerMap<SelectedStationProps> {\n  hideInfo(): SelectedStationProps;\n}\n\ntype ComposedProps = ActionProps &\n  DefaultProps &\n  FetchProps &\n  InjectedProps &\n  PositionProps &\n  SelectedStationProps &\n  WithMapsApiKeyProps &\n  WithGoogleMapProps &\n  WithScriptjsProps;\n\ninterface State {\n  followGps: boolean;\n}\n\nexport class StationMap extends React.PureComponent<ComposedProps, State> {\n  state: State = {followGps: true};\n\n  get gpsCenter() {\n    const {\n      props: {position},\n      state: {followGps},\n    } = this;\n\n    if (followGps && position && position.coords) {\n      const {\n        coords: {latitude, longitude},\n      } = position;\n\n      return new google.maps.LatLng(latitude, longitude);\n    }\n\n    return undefined;\n  }\n\n  get gpsZoom() {\n    const {\n      props: {position},\n      state: {followGps},\n    } = this;\n\n    if (followGps && position && position.coords) {\n      const {\n        coords: {accuracy},\n      } = position;\n\n      return Math.min(20, Math.max(1, Math.log2(591657550 / accuracy) - 6));\n    }\n\n    return undefined;\n  }\n\n  handleDrag = () => {\n    this.setState({followGps: false});\n  };\n\n  handleGpsCenter = () => {\n    this.setState({followGps: true});\n  };\n\n  renderInfo = () => {\n    const {fetchedAt, selectedNode} = this.props;\n\n    if (!selectedNode) {\n      return false;\n    }\n\n    const {\n      station: {lat, lng},\n    } = selectedNode;\n\n    return (\n      <InfoWindow\n        position={{\n          lat,\n          lng,\n        }}\n        onCloseClick={this.props.hideInfo}\n        options={{\n          pixelOffset: new google.maps.Size(0, -100),\n        }}\n      >\n        <StationInfo fetchedAt={fetchedAt} station={selectedNode.station} />\n      </InfoWindow>\n    );\n  };\n\n  renderMarker = (node: StationNode) => {\n    if (!node.isValid) {\n      // this should never happen\n      // eslint-disable-next-line no-console\n      console.debug(`Bad Station Found`, node.station);\n      return false;\n    }\n\n    const {showInfo} = this.props;\n\n    return (\n      <StationMarker\n        key={node.station.number}\n        node={node}\n        showInfo={showInfo}\n      />\n    );\n  };\n\n  renderMarkers = (clustered = true) => {\n    const markers = Array.from(this.props.nodes.values()).map(\n      this.renderMarker,\n    );\n\n    return clustered ? (\n      <MarkerClusterer\n        averageCenter\n        enableRetinaIcons\n        gridSize={60}\n        maxZoom={17}\n      >\n        {markers}\n      </MarkerClusterer>\n    ) : (\n      markers\n    );\n  };\n\n  renderPosition = () => {\n    const {position} = this.props;\n\n    if (!position || !position.coords || !position.timestamp) {\n      return false;\n    }\n\n    return (\n      <GpsMarker coords={position.coords} timestamp={position.timestamp} />\n    );\n  };\n\n  render() {\n    const {\n      props: {hideInfo, defaultCenter, defaultZoom},\n      state: {followGps},\n    } = this;\n\n    return (\n      <GoogleMap\n        center={this.gpsCenter}\n        defaultCenter={defaultCenter}\n        defaultZoom={defaultZoom}\n        onClick={hideInfo}\n        onDrag={this.handleDrag}\n        zoom={this.gpsZoom}\n      >\n        <BicyclingLayer />\n        <ControlSite>\n          <Control onClick={this.handleGpsCenter}>\n            <div\n              style={{\n                backgroundImage:\n                  'url(https://maps.gstatic.com/tactile/mylocation/mylocation-sprite-1x.png)',\n                backgroundPositionX: (followGps ? -9 : -5) * 18,\n                backgroundRepeat: 'no-repeat',\n                width: '18px',\n                height: '18px',\n              }}\n            />\n          </Control>\n        </ControlSite>\n        {this.renderMarkers()}\n        {this.renderPosition()}\n        {this.renderInfo()}\n      </GoogleMap>\n    );\n  }\n}\n\nexport default compose<ComposedProps, Props>(\n  withMapsApiKey,\n  defaultProps<DefaultProps>({\n    defaultCenter: {\n      lat: 49.279627,\n      lng: -123.121116,\n    },\n    defaultZoom: 13,\n  }),\n  withStateHandlers<SelectedStationProps, ActionProps, ComposedProps>(\n    {},\n    {\n      showInfo() {\n        return (selectedNode: StationNode) => ({selectedNode});\n      },\n      hideInfo() {\n        return () => ({selectedNode: undefined});\n      },\n    },\n  ),\n  withProps<WithGoogleMapProps & WithScriptjsProps, WithMapsApiKeyProps>(\n    ({mapsApiKey}) => ({\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${mapsApiKey}&v=3.exp&libraries=geometry,drawing,places`,\n      loadingElement: <div className={styles.LoadingContainer}>Loading...</div>,\n      containerElement: <div className={styles.MapContainer} />,\n      mapElement: <div className={styles.Map} />,\n    }),\n  ),\n  mapProps<InjectedProps, WithMapsApiKeyProps & Props>(\n    ({mapsApiKey, nodes, ...props}) => {\n      return {\n        nodes: nodes.reduce((map, node) => {\n          return map.set(node.station.number, node);\n        }, new Map<number, StationNode>()),\n        ...props,\n      };\n    },\n  ),\n  withScriptjs,\n  withGoogleMap,\n)(StationMap);\n","import {withMapsApiKey, WithMapsApiKeyProps} from './decorators';\nimport StationMap, {Props} from './StationMap';\n\nexport type WithMapsApiKeyProps = WithMapsApiKeyProps;\nexport type StationMapProps = Props;\nexport {withMapsApiKey};\nexport default StationMap;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react';\n\nimport * as styles from './Header.module.scss';\n\nexport interface Props {\n  description: string;\n  logo: string;\n  logoUrl: string;\n}\n\nexport function Header({description, logo, logoUrl}: Props) {\n  return (\n    <div className={styles.Header}>\n      <div className={styles.HeaderLogo}>\n        <a href={logoUrl}>\n          <img alt=\"logo\" src={logo} />\n        </a>\n      </div>\n      <div className={styles.HeaderContent}>\n        <h1>{description}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import Header, {Props} from './Header';\n\nexport type HeaderProps = Props;\nexport default Header;\n","import * as React from 'react';\n\nimport {graphql, StaticQuery} from 'gatsby';\nimport {compose, defaultProps, fromRenderProps} from 'recompose';\nimport {Header, HeaderProps} from './components';\n\nimport * as styles from './DefaultLayout.module.scss';\n\nexport interface Props {\n  errors: any[];\n}\n\ninterface QueryProps {\n  site: {\n    siteMetadata: HeaderProps;\n  };\n}\n\ntype ComposedProps = Props & QueryProps;\n\nexport function DefaultLayout({\n  errors,\n  site: {\n    siteMetadata: {description, logo, logoUrl},\n  },\n  ...props\n}: ComposedProps) {\n  return (\n    <div className={styles.Container}>\n      <Header description={description} logo={logo} logoUrl={logoUrl} />\n      <div className={styles.Content} {...props} />\n      {errors.length === 0 ? false : <div>{errors}</div>}\n    </div>\n  );\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        description\n        logo\n        logoUrl\n      }\n    }\n  }\n`;\n\nfunction DefaultLayoutQuery({...props}: any) {\n  return <StaticQuery query={query} {...props} />;\n}\n\nexport default compose<ComposedProps, {}>(\n  defaultProps({\n    errors: [],\n  }),\n  fromRenderProps<QueryProps, {}>(DefaultLayoutQuery, ({site}) => ({site})),\n)(DefaultLayout);\n","import DefaultLayout, {Props} from './DefaultLayout';\n\nexport type DefaultLayoutProps = Props;\nexport default DefaultLayout;\n","import {Station} from './Station';\n\nexport class StationNode {\n  public readonly station: Station;\n\n  constructor(station: Station) {\n    this.station = station;\n  }\n\n  public get isValid() {\n    return [\n      Number.isInteger(this.station.bikes),\n      Number.isInteger(this.station.free),\n      Number.isInteger(this.station.total),\n      Number.isInteger(this.station.number),\n      this.station.number > 0,\n      Number.isFinite(this.station.lat),\n      this.station.lat !== 0,\n      Number.isFinite(this.station.lng),\n      this.station.lng !== 0,\n      /^\\w/.test(this.station.name),\n      this.station.errors.length === 0,\n    ].every((x) => x);\n  }\n\n  toString() {\n    return this.isValid\n      ? `[${this.station.number}] ${this.station.name} (${\n          this.station.bikes\n        } | ${this.station.free})`\n      : 'INVALID';\n  }\n}\n","import {map} from 'rxjs/operators';\nimport {createStation, parseLatLng, Station} from '~/station';\n\nexport interface SmooveStation {\n  name: string;\n  coordinates: string;\n  // eslint-disable-next-line camelcase\n  total_slots: number;\n  // eslint-disable-next-line camelcase\n  free_slots: number;\n  // eslint-disable-next-line camelcase\n  avl_bikes: number;\n  operative: boolean;\n  style: string;\n}\n\nexport interface Response {\n  result: SmooveStation[];\n}\n\nexport function parseNameAndNumber({name}: SmooveStation, station: Station) {\n  try {\n    const match = /^(\\d+)\\s+(.*)$/.exec(name);\n\n    if (!match) {\n      throw new Error(`Unable to parse \"number name\" from ${name}`);\n    }\n\n    station.number = Number(match[1]);\n    station.name = match[2];\n  } catch (error) {\n    station.errors.push(error);\n  }\n}\n\nexport function create(data: SmooveStation) {\n  const station = createStation({\n    data,\n    bikes: data.avl_bikes,\n    free: data.free_slots,\n    operative: data.operative,\n    total: data.total_slots,\n  });\n\n  parseNameAndNumber(data, station);\n  parseLatLng(data.coordinates, station);\n\n  return station;\n}\n\nexport default map<Response, Station[]>(({result}) => result.map(create));\n","export interface Station extends google.maps.LatLngLiteral {\n  bikes: number;\n  data: any;\n  errors: any[];\n  free: number;\n  name: string;\n  number: number;\n  operative: boolean;\n  total: number;\n}\n\nexport function createStation(station: Partial<Station> = {}): Station {\n  return {\n    data: null,\n    errors: [],\n    bikes: 0,\n    free: 0,\n    lat: 0,\n    lng: 0,\n    name: '',\n    number: 0,\n    operative: false,\n    total: 0,\n    ...station,\n  };\n}\n\nexport function parseLatLng(position: string, station: Station) {\n  try {\n    const match = /^\\s*(-?\\d+\\.\\d+)\\s*,\\s*(-?\\d+\\.\\d+)\\s*$/.exec(position);\n\n    if (!match) {\n      throw new Error(`Unable to parse \"lat, lng\" from ${position}`);\n    }\n\n    station.lat = Number(match[1]);\n    station.lng = Number(match[2]);\n  } catch (error) {\n    station.errors.push(error);\n  }\n}\n","import {OperatorFunction} from 'rxjs';\nimport {Station} from '~/station';\nimport {Smoove} from './transform';\n\nenum StationSourceType {\n  Smoove,\n}\n\nexport interface StationSourceConfig {\n  location: google.maps.LatLngLiteral;\n  name: string;\n  options?: any;\n  type: keyof typeof StationSourceType;\n  uri: string;\n  cors?: boolean;\n}\n\nconst configMap = new Map<string, StationSourceConfig>([\n  [\n    'test',\n    {\n      location: {\n        lat: 49.279627,\n        lng: -123.121116,\n      },\n      name: 'Test Data',\n      type: 'Smoove',\n      uri: '/static_data',\n    },\n  ],\n  [\n    'vancouver',\n    {\n      location: {\n        lat: 49.279627,\n        lng: -123.121116,\n      },\n      name: 'Mobi Bike Vancouver',\n      type: 'Smoove',\n      uri: 'http://vancouver-ca.smoove.pro/api-public/stations',\n      cors: true,\n    },\n  ],\n]);\n\nexport function getConfig(key: string) {\n  const config = configMap.get(key.toLowerCase());\n\n  if (!config) {\n    throw new Error(`No station data for source '${key}'`);\n  }\n\n  return config;\n}\n\nexport function getConfigByLocation(location: google.maps.LatLng) {\n  return Array.from(configMap.values())\n    .map((config) => ({\n      config,\n      distance: google.maps.geometry.spherical.computeDistanceBetween(\n        location,\n        new google.maps.LatLng(config.location.lat, config.location.lng),\n      ),\n    }))\n    .sort((left, right) => left.distance - right.distance)[0].config;\n}\n\nexport type StationSourceTransform = OperatorFunction<any, Station[]>;\n\nexport function mapTransform({\n  type,\n}: StationSourceConfig): StationSourceTransform {\n  switch (type) {\n    case 'Smoove':\n      return Smoove;\n    default:\n      throw new Error(`Invalid Configuration '${type}'`);\n  }\n}\n","import moment from 'moment';\nimport {Observable, of, timer, merge} from 'rxjs';\nimport {ajax} from 'rxjs/ajax';\nimport {tap, map, catchError, mergeMap, debounceTime} from 'rxjs/operators';\nimport {Station, StationNode} from '~/station';\nimport {\n  getConfig,\n  getConfigByLocation,\n  mapTransform,\n  StationSourceConfig,\n  StationSourceTransform,\n} from './config';\n\nexport interface StationSourceResult {\n  config: StationSourceConfig;\n  error?: any[];\n  fetchedAt: moment.Moment;\n  nodes: StationNode[];\n}\n\nexport interface Options {\n  debug?: boolean;\n}\n\nexport class StationSource {\n  public static create(\n    configOrKey: string | StationSourceConfig,\n    {debug}: Options,\n  ) {\n    const config =\n      typeof configOrKey === 'string' ? getConfig(configOrKey) : configOrKey;\n\n    return new StationSource(config, mapTransform(config), debug);\n  }\n\n  public static nearest(location: google.maps.LatLng, options: Options) {\n    return StationSource.create(getConfigByLocation(location), options);\n  }\n\n  readonly config: StationSourceConfig;\n  readonly verboseOutput: boolean;\n  private readonly transform: StationSourceTransform;\n\n  constructor(\n    config: StationSourceConfig,\n    transform: StationSourceTransform,\n    // eslint-disable-next-line no-process-env\n    verboseOutput = process.env.NODE_ENV !== 'production',\n  ) {\n    this.config = config;\n    this.transform = transform;\n    this.verboseOutput = verboseOutput;\n  }\n\n  getJSON() {\n    const uri = this.config.cors\n      ? `https://cors.io/?${this.config.uri}`\n      : this.config.uri;\n    this.debug(`Fetching stations from '${uri}' ...`);\n\n    const headers = this.config.options\n      ? this.config.options.headers\n      : undefined;\n    return ajax.getJSON(uri, headers);\n  }\n\n  getStations(source?: Observable<any>) {\n    return (source || this.getJSON()).pipe(\n      tap((response) => {\n        this.debug('Fetch Response', response);\n      }),\n      this.transform,\n      map<Station[], StationSourceResult>((stations) => {\n        this.debug(`Fetched ${stations.length} stations`);\n\n        return {\n          config: this.config,\n          nodes: stations.map((station) => new StationNode(station)),\n          fetchedAt: moment(),\n        };\n      }),\n      catchError((error = {}) => {\n        this.debug(`Fetch failed: ${error.message || 'Unknown Error'}`, error);\n\n        return of<StationSourceResult>({\n          error,\n          config: this.config,\n          fetchedAt: moment(),\n          nodes: [],\n        });\n      }),\n    );\n  }\n\n  watchStations(\n    reloader: Observable<any> = of(true),\n    interval = 300,\n    source?: Observable<any>,\n  ) {\n    return merge(timer(0, 1000 * interval), reloader).pipe(\n      debounceTime(100),\n      mergeMap(() => this.getStations(source)),\n    );\n  }\n\n  protected debug(message: string, ...args: any[]) {\n    if (this.verboseOutput) {\n      // eslint-disable-next-line no-console\n      console.log(message, args);\n    }\n  }\n}\n","import {mapPropsStream, setObservableConfig, withProps} from 'recompose';\nimport {from, Observable} from 'rxjs';\nimport {\n  combineLatest,\n  distinctUntilChanged,\n  filter,\n  map,\n  mergeMap,\n  startWith,\n} from 'rxjs/operators';\nimport {StationSource, StationSourceResult} from '~/data';\nimport {Subject} from 'rxjs/internal/Subject';\n\nsetObservableConfig({\n  fromESObservable: from as any,\n});\n\nexport type QueryParams = Map<string, string>;\n\nexport interface WithQueryParamProps {\n  params: QueryParams | null;\n}\n\nfunction getUrlParams() {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const params = new Map<string, string>();\n\n  new URLSearchParams(window.location.search).forEach((value, key) => {\n    params.set(key.toLowerCase(), value);\n  });\n\n  return params;\n}\n\nexport const withQueryParams = withProps<WithQueryParamProps, {}>(() => {\n  return {\n    params: getUrlParams(),\n  };\n});\n\ninterface PositionProps {\n  coords?: Coordinates;\n  timestamp?: number;\n  error?: any;\n}\n\nexport interface WithPositionProps {\n  position?: PositionProps;\n}\n\nexport function withPosition(\n  options: PositionOptions = {enableHighAccuracy: true},\n) {\n  const reloader = new Subject();\n  const reload = () => reloader.next();\n\n  return mapPropsStream<WithPositionProps, {}>((props) => {\n    return props.pipe(\n      map(() => typeof navigator !== 'undefined' && navigator.geolocation),\n      filter((geolocation): geolocation is Geolocation => Boolean(geolocation)),\n      mergeMap((geolocation) => {\n        return new Observable<PositionProps>((observer) => {\n          geolocation.watchPosition(\n            (position) => {\n              observer.next(position);\n            },\n            (error) => {\n              observer.error({error});\n            },\n            options,\n          );\n        });\n      }),\n      startWith(undefined),\n      combineLatest(props, (position, prev) => {\n        // eslint-disable-next-line no-console\n        console.log('[position]', position, prev);\n        return {\n          ...prev,\n          reload,\n          position,\n        };\n      }),\n    );\n  });\n}\n\nexport interface WithStationsProps {\n  stations?: StationSourceResult;\n  reload(): void;\n}\n\nexport function withStations(defaultKey = 'vancouver') {\n  const reloader = new Subject();\n  const reload = () => {\n    // eslint-disable-next-line no-console\n    console.log('reload');\n    reloader.next();\n  };\n\n  return mapPropsStream<\n    WithStationsProps,\n    WithStationsProps & WithQueryParamProps\n  >((props) => {\n    return props.pipe(\n      map(({params}) => params),\n      filter((params): params is QueryParams => params != null),\n      map((params) => {\n        return {\n          debug: Boolean(params.get('debug')),\n          source:\n            params.get('source') ||\n            (params.get('test') && 'test') ||\n            defaultKey,\n        };\n      }),\n      distinctUntilChanged(\n        (left, right) =>\n          left.debug === right.debug && left.source === right.source,\n      ),\n      mergeMap(({debug, source}) => {\n        // eslint-disable-next-line no-console\n        console.log('fetch', {source, debug});\n        return StationSource.create(source, {debug}).watchStations(reloader);\n      }),\n      combineLatest(props, (stations, prev) => {\n        // eslint-disable-next-line no-console\n        console.log('[stations]', stations, prev);\n        return {\n          ...prev,\n          reload,\n          stations,\n        };\n      }),\n    );\n  });\n}\n","import * as React from 'react';\n\nimport {compose} from 'recompose';\nimport {Loader, StationMap} from '~/components';\nimport {DefaultLayout} from '~/layouts';\nimport {\n  withPosition,\n  WithPositionProps,\n  withQueryParams,\n  WithQueryParamProps,\n  withStations,\n  WithStationsProps,\n} from './decorators';\n\ntype ComposedProps = WithPositionProps &\n  WithQueryParamProps &\n  WithStationsProps;\n\nexport function IndexPage({position, reload, stations}: ComposedProps) {\n  return (\n    <DefaultLayout>\n      {stations ? (\n        <StationMap\n          fetchedAt={stations.fetchedAt}\n          location={stations.config.location}\n          nodes={stations.nodes}\n          position={position}\n          reload={reload}\n        />\n      ) : (\n        <Loader />\n      )}\n    </DefaultLayout>\n  );\n}\n\nexport default compose<ComposedProps, {}>(\n  withQueryParams,\n  withPosition(),\n  withStations(),\n)(IndexPage);\n","import IndexPage from './IndexPage';\n\nexport default IndexPage;\n","import * as React from 'react';\n\nimport * as styles from './NotFoundPage.module.scss';\n\nexport function NotFoundPage() {\n  return (\n    <div className={styles.Container}>\n      <h1>NOT FOUND</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import NotFoundPage from './NotFoundPage';\n\nexport default NotFoundPage;\n","export {default as IndexPage} from './IndexPage';\nexport {default as NotFoundPage} from './NotFoundPage';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}