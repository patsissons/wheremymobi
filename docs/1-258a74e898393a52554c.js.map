{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Loader/Loader.tsx","webpack:///./src/components/Loader/index.ts","webpack:///./src/components/StationMap/components/GpsMarker/GpsMarker.tsx","webpack:///./src/components/StationMap/components/GpsMarker/index.ts","webpack:///./src/components/StationMap/components/StationInfo/StationInfo.tsx","webpack:///./src/components/StationMap/components/StationInfo/index.ts","webpack:///./src/components/StationMap/components/StationMarker/icon.ts","webpack:///./src/components/StationMap/components/StationMarker/StationMarker.tsx","webpack:///./src/components/StationMap/components/StationMarker/index.ts","webpack:///./src/components/StationMap/decorators.ts","webpack:///./src/components/StationMap/StationMap.tsx","webpack:///./src/components/StationMap/index.ts","webpack:///./src/layouts/DefaultLayout/components/Header/Header.tsx","webpack:///./src/layouts/DefaultLayout/components/Header/index.ts","webpack:///./src/layouts/DefaultLayout/DefaultLayout.tsx","webpack:///./src/layouts/DefaultLayout/index.ts","webpack:///./src/station/Node.ts","webpack:///./src/data/transform/Smoove.ts","webpack:///./src/station/Station.ts","webpack:///./src/data/config.ts","webpack:///./src/data/StationSource.ts","webpack:///./src/components/IndexPage/decorators.ts","webpack:///./src/components/IndexPage/IndexPage.tsx","webpack:///./src/components/IndexPage/index.ts","webpack:///./src/components/NotFoundPage/NotFoundPage.tsx","webpack:///./src/components/NotFoundPage/index.ts","webpack:///./src/components/index.ts","webpack:///./src/components/Loader/Loader.module.scss","webpack:///./src/components/StationMap/StationMap.module.scss","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/layouts/DefaultLayout/components/Header/Header.module.scss","webpack:///./src/layouts/DefaultLayout/DefaultLayout.module.scss"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","loaders","compose","Loader","withProps","_ref2","name","Math","floor","random","length","_ref","Boolean","react","className","styles","dist_default","GpsMarker","_ref$color","color","coords","timestamp","objectWithoutPropertiesLoose_default","accuracy","heading","lat","latitude","lng","longitude","position","google","maps","LatLng","lib","center","radius","options","fillColor","strokeColor","fillOpacity","strokeWeight","Object","assign","icon","anchor","Point","path","SymbolPath","FORWARD_CLOSED_ARROW","rotation","scale","StationInfo","fetchedAt","station","number","toString","padStart","operative","bikes","free","total","target","href","fromNow","marker","trim","createIcon","url","encodeURIComponent","replace","markerWithFillColor","labelOrigin","StationMarker","withHandlers","handleOnClick","showInfo","node","onClick","label","text","fontSize","fontWeight","withMapsApiKey","defaultProps","mapsApiKey","StationMap","_React$PureComponent","_this","_len","arguments","args","Array","_key","call","apply","this","concat","renderInfo","_this$props","selectedNode","_selectedNode$station","onCloseClick","hideInfo","pixelOffset","Size","components_StationInfo","renderMarker","isValid","console","debug","components_StationMarker","key","renderMarkers","clustered","markers","from","nodes","values","map","MarkerClusterer_default","averageCenter","enableRetinaIcons","gridSize","maxZoom","renderPosition","components_GpsMarker","inheritsLoose_default","prototype","_this$props2","defaultCenter","defaultZoom","withStateHandlers","undefined","googleMapURL","loadingElement","containerElement","mapElement","mapProps","reduce","set","Map","withScriptjs","withGoogleMap","Header","description","logo","logoUrl","src","DefaultLayout","errors","fromRenderProps","gatsby_browser_entry","_3229557108","_ref3","site","_ref$site$siteMetadat","siteMetadata","components_Header","StationNode","createClass_default","get","Number","isInteger","isFinite","test","every","x","create","createStation","avl_bikes","free_slots","total_slots","match","exec","error","push","parseNameAndNumber","parseLatLng","coordinates","StationSourceType","result","configMap","location","type","uri","cors","StationSource","config","transform","verboseOutput","process","configOrKey","toLowerCase","getConfig","Smoove","mapTransform","nearest","distance","geometry","spherical","computeDistanceBetween","sort","b","getConfigByLocation","_proto","getJSON","headers","ajax","getStations","source","pipe","tap","response","stations","moment","catchError","message","of","watchStations","reloader","interval","_this2","merge","timer","debounceTime","mergeMap","log","setObservableConfig","fromESObservable","params","window","URLSearchParams","search","forEach","value","getUrlParams","IndexPage","enableHighAccuracy","Observable","observer","navigator","geolocation","watchPosition","next","mapPropsStream","combineLatest","startWith","prev","withPosition","defaultKey","Subject","stationsObservable","filter","distinctUntilChanged","reload","withStations","layouts_DefaultLayout","components_StationMap","components_Loader","NotFoundPage","components_IndexPage","components_NotFoundPage","LoadingContainer","MapContainer","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","HeaderLogo","HeaderContent","Container","Content"],"mappings":"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","file":"1-258a74e898393a52554c.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\nimport Spinner, {SpinnerProps} from 'react-spinkit';\nimport {compose, withProps} from 'recompose';\n\nimport * as styles from './Loader.module.scss';\n\nconst loaders: Required<SpinnerProps['name']>[] = [\n  'double-bounce',\n  'chasing-dots',\n  'circle',\n  'cube-grid',\n];\n\nfunction randomLoaderName() {\n  return loaders[Math.floor(Math.random() * loaders.length)];\n}\n\nexport interface Props {\n  name?: SpinnerProps['name'];\n}\n\nexport function Loader({name}: Props) {\n  return (\n    Boolean(name) && (\n      <div className={styles.LoadingContainer}>\n        <Spinner className={styles.Loader} name={name} />\n      </div>\n    )\n  );\n}\n\nexport default compose<Props, {}>(\n  withProps(({name}: Props) => ({name: name || randomLoaderName()})),\n)(Loader as any);\n","import Loader, {Props} from './Loader';\nexport type LoaderProps = Props;\nexport default Loader;\n","import * as React from 'react';\nimport {Circle, Marker, MarkerProps} from 'react-google-maps';\n\nexport interface Props extends MarkerProps {\n  color?: string;\n  coords: Coordinates;\n  timestamp: number;\n}\n\ntype ComposedProps = Props;\n\nexport function GpsMarker({\n  color = 'magenta',\n  coords,\n  timestamp,\n  ...props\n}: ComposedProps) {\n  const {accuracy, heading, latitude: lat, longitude: lng} = coords;\n\n  const position = new google.maps.LatLng(lat, lng);\n\n  return (\n    <>\n      <Circle\n        center={position}\n        radius={accuracy}\n        options={{\n          fillColor: color,\n          strokeColor: color,\n          fillOpacity: 0.25,\n          strokeWeight: 1,\n        }}\n      />\n      <Marker\n        icon={{\n          anchor: new google.maps.Point(0, 2.6),\n          path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n          strokeColor: color,\n          fillColor: color,\n          fillOpacity: 1,\n          rotation: heading,\n          scale: 10,\n          strokeWeight: 1,\n        }}\n        position={new google.maps.LatLng(lat, lng)}\n        {...props}\n      />\n    </>\n  );\n}\n\nexport default GpsMarker;\n","import GpsMarker, {Props} from './GpsMarker';\nexport type GpsMarkerProps = Props;\nexport default GpsMarker;\n","import * as React from 'react';\nimport moment from 'moment';\nimport {Station} from '~/station';\n\nexport interface Props {\n  fetchedAt: moment.Moment;\n  station: Station;\n}\n\nexport function StationInfo({fetchedAt, station}: Props) {\n  return (\n    <div>\n      <ul>\n        <li>{`[${station.number.toString().padStart(4, '0')}] ${station.name}${\n          station.operative ? '' : ' (CLOSED)'\n        }`}</li>\n        <li>{`${station.bikes} bikes / ${station.free} slots (${\n          station.total\n        } total)`}</li>\n        <li>\n          <a\n            target=\"_blank\"\n            href={`https://www.google.com/maps/dir/?api=${1}&travelmode=bicycling&destination=${\n              station.lat\n            },${station.lng}`}\n          >{`${station.lat}, ${station.lng}`}</a>\n        </li>\n        <li>{`Last Updated: ${fetchedAt.fromNow()}`}</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default StationInfo;\n","import StationInfo, {Props} from './StationInfo';\nexport type StationInfoProps = Props;\nexport default StationInfo;\n","import {Station} from '~/station';\nconst marker = `\n<svg width=\"100px\" height=\"100px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\n  <path id=\"bg\" fill=\"#ffffff\" d=\"m77.438,31.70225c-0.139,-5.802 -1.797,-10.248 -4.202,-14.012c-2.307,-3.607 -5.341,-6.666 -9.258,-8.958c-4.793,-2.803 -11.556,-4.639 -18.766,-3.553c-8.819,1.33 -15.391,6.39 -19.316,12.561c-2.385,3.752 -4.039,8.341 -4.152,14.062c-0.117,5.854 1.706,10.369 3.954,14.261c1.122,1.948 2.132,3.929 3.302,5.805c3.504,5.621 7.291,10.97 10.559,16.765c4.406,7.812 8.044,16.242 10.108,26.371c2.984,-15.367 9.802,-26.583 17.063,-37.58c2.439,-3.692 4.867,-7.382 6.806,-11.41c0.993,-2.063 2.107,-3.996 2.803,-6.306c0.684,-2.283 1.172,-5.035 1.099,-8.006z\"/>\n  <path id=\"fill\" fill=\"currentColor\" d=\"M77.438,31.834c-0.139-5.802-1.797-10.248-4.202-14.012c-2.307-3.607-5.341-6.666-9.258-8.958   c-4.793-2.803-11.556-4.639-18.766-3.553c-8.819,1.33-15.391,6.39-19.316,12.561c-2.385,3.752-4.039,8.341-4.152,14.062   c-0.117,5.854,1.706,10.369,3.954,14.261C26.82,48.143,27.83,50.124,29,52c3.504,5.621,7.291,10.97,10.559,16.765   c4.406,7.812,8.044,16.242,10.108,26.371c2.984-15.367,9.802-26.583,17.063-37.58c2.439-3.692,4.867-7.382,6.806-11.41   c0.993-2.063,2.107-3.996,2.803-6.306C77.023,37.557,77.511,34.805,77.438,31.834z M49.685,52.47   c-11.004,0-19.923-8.92-19.923-19.923c0-11.002,8.919-19.922,19.923-19.922c11.003,0,19.923,8.92,19.923,19.922   C69.607,43.55,60.688,52.47,49.685,52.47z\"/>\n</svg>`.trim();\n\nexport function getFillColor({bikes}: Station): string {\n  if (bikes > 10) {\n    return 'forestgreen';\n  }\n\n  if (bikes > 5) {\n    return 'coral';\n  }\n\n  return 'crimson';\n}\n\nfunction markerWithFillColor(station: Station) {\n  return `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(\n    marker.replace(/fill=\"currentColor\"/, `fill=\"${getFillColor(station)}\"`),\n  )}`;\n}\n\nexport function createIcon(station: Station): google.maps.Icon {\n  return {\n    url: markerWithFillColor(station),\n    labelOrigin: new google.maps.Point(49, 33),\n  };\n}\n","import * as React from 'react';\nimport {Marker, MarkerProps} from 'react-google-maps';\nimport {compose, withHandlers} from 'recompose';\nimport {StationNode} from '~/station';\nimport {createIcon} from './icon';\n\nexport interface SelectedStationProps {\n  selectedNode?: StationNode;\n}\n\nexport interface ActionProps {\n  showInfo(station: StationNode): SelectedStationProps;\n}\n\nexport interface Props extends ActionProps, MarkerProps {\n  node: StationNode;\n}\n\ninterface HandlerProps {\n  handleOnClick(): void;\n}\n\ntype ComposedProps = Props & HandlerProps;\n\nexport function StationMarker({\n  handleOnClick,\n  showInfo,\n  node: {station},\n  ...props\n}: ComposedProps) {\n  const {lat, lng} = station;\n\n  return (\n    <Marker\n      onClick={handleOnClick}\n      icon={createIcon(station)}\n      label={{\n        text: `${station.bikes} | ${station.free}`,\n        fontSize: '0.75rem',\n        fontWeight: 'bold',\n      }}\n      position={new google.maps.LatLng(lat, lng)}\n      {...props}\n    />\n  );\n}\n\nexport default compose<ComposedProps, Props>(\n  withHandlers({\n    handleOnClick({showInfo, node}: Props) {\n      return () => showInfo(node);\n    },\n  }),\n)(StationMarker);\n","import StationMarker, {\n  ActionProps,\n  Props,\n  SelectedStationProps,\n} from './StationMarker';\nexport type SelectedStationProps = SelectedStationProps;\nexport type StationMarkerActionProps = ActionProps;\nexport type StationMarkerProps = Props;\nexport default StationMarker;\n","import {defaultProps, InferableComponentEnhancerWithProps} from 'recompose';\n\nexport interface WithMapsApiKeyProps {\n  mapsApiKey: string;\n}\n\n// export function withMapsApiKey(): InferableComponentEnhancerWithProps<\n//   WithMapsApiKeyProps,\n//   any\n// > {\n//   return defaultProps({\n//     mapsApiKey: 'AIzaSyBXrYScIU6sWYUWLLlovYhzq-bLzwTgAoc',\n//   });\n// }\n\nexport const withMapsApiKey = defaultProps({\n  mapsApiKey: 'AIzaSyBXrYScIU6sWYUWLLlovYhzq-bLzwTgAoc',\n});\n","import * as React from 'react';\nimport moment from 'moment';\nimport {\n  compose,\n  mapProps,\n  withProps,\n  withStateHandlers,\n  defaultProps,\n  StateHandlerMap,\n} from 'recompose';\nimport {\n  BicyclingLayer,\n  GoogleMap,\n  InfoWindow,\n  withScriptjs,\n  WithScriptjsProps,\n  withGoogleMap,\n  WithGoogleMapProps,\n} from 'react-google-maps';\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer';\nimport {StationNode} from '~/station';\nimport {\n  GpsMarker,\n  GpsMarkerProps,\n  SelectedStationProps,\n  StationInfo,\n  StationMarker,\n  StationMarkerActionProps,\n} from './components';\nimport {withMapsApiKey, WithMapsApiKeyProps} from './decorators';\n\nimport * as styles from './StationMap.module.scss';\n\ninterface FetchProps {\n  fetchedAt: moment.Moment;\n  location: google.maps.LatLngLiteral;\n}\n\ninterface PositionProps {\n  position: Partial<GpsMarkerProps> | undefined;\n}\n\nexport interface Props extends FetchProps, PositionProps {\n  nodes: StationNode[];\n}\n\ninterface DefaultProps {\n  defaultCenter: google.maps.LatLngLiteral;\n  defaultZoom: number;\n}\n\ninterface InjectedProps {\n  nodes: Map<number, StationNode>;\n}\n\ninterface ActionProps\n  extends StationMarkerActionProps,\n    StateHandlerMap<SelectedStationProps> {\n  hideInfo(): SelectedStationProps;\n}\n\ntype ComposedProps = ActionProps &\n  DefaultProps &\n  FetchProps &\n  InjectedProps &\n  PositionProps &\n  SelectedStationProps &\n  WithMapsApiKeyProps &\n  WithGoogleMapProps &\n  WithScriptjsProps;\n\nexport class StationMap extends React.PureComponent<ComposedProps> {\n  renderInfo = () => {\n    const {fetchedAt, selectedNode} = this.props;\n\n    if (!selectedNode) {\n      return false;\n    }\n\n    const {\n      station: {lat, lng},\n    } = selectedNode;\n\n    return (\n      <InfoWindow\n        position={{\n          lat,\n          lng,\n        }}\n        onCloseClick={this.props.hideInfo}\n        options={{\n          pixelOffset: new google.maps.Size(0, -100),\n        }}\n      >\n        <StationInfo fetchedAt={fetchedAt} station={selectedNode.station} />\n      </InfoWindow>\n    );\n  };\n\n  renderMarker = (node: StationNode) => {\n    if (!node.isValid) {\n      // this should never happen\n      // tslint:disable-next-line:no-console\n      console.debug(`Bad Station Found`, node.station);\n      return false;\n    }\n\n    const {showInfo} = this.props;\n\n    return (\n      <StationMarker\n        key={node.station.number}\n        node={node}\n        showInfo={showInfo}\n      />\n    );\n  };\n\n  renderMarkers = (clustered = true) => {\n    const markers = Array.from(this.props.nodes.values()).map(\n      this.renderMarker,\n    );\n\n    return clustered ? (\n      <MarkerClusterer\n        averageCenter\n        enableRetinaIcons\n        gridSize={60}\n        maxZoom={17}\n      >\n        {markers}\n      </MarkerClusterer>\n    ) : (\n      markers\n    );\n  };\n\n  renderPosition = () => {\n    const {position} = this.props;\n\n    if (!position || !position.coords || !position.timestamp) {\n      return false;\n    }\n\n    return (\n      <GpsMarker coords={position.coords} timestamp={position.timestamp} />\n    );\n  };\n\n  render() {\n    const {hideInfo, defaultCenter, defaultZoom} = this.props;\n\n    return (\n      <GoogleMap\n        defaultCenter={defaultCenter}\n        defaultZoom={defaultZoom}\n        onClick={hideInfo}\n      >\n        <BicyclingLayer />\n        {this.renderMarkers()}\n        {this.renderPosition()}\n        {this.renderInfo()}\n      </GoogleMap>\n    );\n  }\n}\n\nexport default compose<ComposedProps, Props>(\n  withMapsApiKey,\n  defaultProps<DefaultProps>({\n    defaultCenter: {\n      lat: 49.279627,\n      lng: -123.121116,\n    },\n    defaultZoom: 13,\n  }),\n  withStateHandlers<SelectedStationProps, ActionProps, ComposedProps>(\n    {},\n    {\n      showInfo() {\n        return (selectedNode: StationNode) => ({selectedNode});\n      },\n      hideInfo() {\n        return () => ({selectedNode: undefined});\n      },\n    },\n  ),\n  withProps<WithGoogleMapProps & WithScriptjsProps, WithMapsApiKeyProps>(\n    ({mapsApiKey}) => ({\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${mapsApiKey}&v=3.exp&libraries=geometry,drawing,places`,\n      loadingElement: <div className={styles.LoadingContainer}>Loading...</div>,\n      containerElement: <div className={styles.MapContainer} />,\n      mapElement: <div className={styles.Map} />,\n    }),\n  ),\n  mapProps<InjectedProps, WithMapsApiKeyProps & Props>(\n    ({mapsApiKey, nodes, ...props}) => {\n      return {\n        nodes: nodes.reduce((map, node) => {\n          return map.set(node.station.number, node);\n        }, new Map<number, StationNode>()),\n        ...props,\n      };\n    },\n  ),\n  withScriptjs,\n  withGoogleMap,\n)(StationMap);\n","import StationMap, {Props} from './StationMap';\nexport type StationMapProps = Props;\nexport default StationMap;\n\nimport {withMapsApiKey, WithMapsApiKeyProps} from './decorators';\nexport type WithMapsApiKeyProps = WithMapsApiKeyProps;\nexport {withMapsApiKey};\n","import * as React from 'react';\n\nimport * as styles from './Header.module.scss';\n\nexport interface Props {\n  description: string;\n  logo: string;\n  logoUrl: string;\n}\n\nexport function Header({description, logo, logoUrl}: Props) {\n  return (\n    <div className={styles.Header}>\n      <div className={styles.HeaderLogo}>\n        <a href={logoUrl}>\n          <img src={logo} />\n        </a>\n      </div>\n      <div className={styles.HeaderContent}>\n        <h1>{description}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import Header, {Props} from './Header';\nexport type HeaderProps = Props;\nexport default Header;\n","import * as React from 'react';\nimport {graphql, StaticQuery} from 'gatsby';\nimport {compose, defaultProps, fromRenderProps} from 'recompose';\nimport {Header, HeaderProps} from './components';\n\nimport * as styles from './DefaultLayout.module.scss';\n\nexport interface Props {\n  errors: any[];\n}\n\ninterface QueryProps {\n  site: {\n    siteMetadata: HeaderProps;\n  };\n}\n\ntype ComposedProps = Props & QueryProps;\n\nexport function DefaultLayout({\n  errors,\n  site: {\n    siteMetadata: {description, logo, logoUrl},\n  },\n  ...props\n}: ComposedProps) {\n  return (\n    <div className={styles.Container}>\n      <Header description={description} logo={logo} logoUrl={logoUrl} />\n      <div className={styles.Content} {...props} />\n      {errors.length === 0 ? false : <div>{errors}</div>}\n    </div>\n  );\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        description\n        logo\n        logoUrl\n      }\n    }\n  }\n`;\n\nfunction DefaultLayoutQuery({...props}: any) {\n  return <StaticQuery query={query} {...props} />;\n}\n\nexport default compose<ComposedProps, {}>(\n  defaultProps({\n    errors: [],\n  }),\n  fromRenderProps<QueryProps, {}>(DefaultLayoutQuery, ({site}) => ({site})),\n)(DefaultLayout);\n","import DefaultLayout, {Props} from './DefaultLayout';\nexport type DefaultLayoutProps = Props;\nexport default DefaultLayout;\n","import {Station} from './Station';\n\nexport class StationNode {\n  public readonly station: Station;\n\n  constructor(station: Station) {\n    this.station = station;\n  }\n\n  public get isValid() {\n    return [\n      Number.isInteger(this.station.bikes),\n      Number.isInteger(this.station.free),\n      Number.isInteger(this.station.total),\n      Number.isInteger(this.station.number),\n      this.station.number > 0,\n      Number.isFinite(this.station.lat),\n      this.station.lat !== 0,\n      Number.isFinite(this.station.lng),\n      this.station.lng !== 0,\n      /^\\w/.test(this.station.name),\n      this.station.errors.length === 0,\n    ].every((x) => x);\n  }\n\n  toString() {\n    return this.isValid\n      ? `[${this.station.number}] ${this.station.name} (${\n          this.station.bikes\n        } | ${this.station.free})`\n      : 'INVALID';\n  }\n}\n","import {OperatorFunction} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {createStation, parseLatLng, Station} from '~/station';\n\nexport interface SmooveStation {\n  name: string;\n  coordinates: string;\n  total_slots: number;\n  free_slots: number;\n  avl_bikes: number;\n  operative: boolean;\n  style: string;\n}\n\nexport interface Response {\n  result: SmooveStation[];\n}\n\nexport function parseNameAndNumber({name}: SmooveStation, station: Station) {\n  try {\n    const match = /^(\\d+)\\s+(.*)$/.exec(name);\n\n    if (!match) {\n      throw new Error(`Unable to parse \"number name\" from ${name}`);\n    }\n\n    station.number = Number(match[1]);\n    station.name = match[2];\n  } catch (error) {\n    station.errors.push(error);\n  }\n}\n\nexport function create(data: SmooveStation) {\n  const station = createStation({\n    data,\n    bikes: data.avl_bikes,\n    free: data.free_slots,\n    operative: data.operative,\n    total: data.total_slots,\n  });\n\n  parseNameAndNumber(data, station);\n  parseLatLng(data.coordinates, station);\n\n  return station;\n}\n\nexport default map<Response, Station[]>(({result}) => result.map(create));\n","export interface Station extends google.maps.LatLngLiteral {\n  bikes: number;\n  data: any;\n  errors: any[];\n  free: number;\n  name: string;\n  number: number;\n  operative: boolean;\n  total: number;\n}\n\nexport function createStation(station: Partial<Station> = {}): Station {\n  return {\n    data: null,\n    errors: [],\n    bikes: 0,\n    free: 0,\n    lat: 0,\n    lng: 0,\n    name: '',\n    number: 0,\n    operative: false,\n    total: 0,\n    ...station,\n  };\n}\n\nexport function parseLatLng(position: string, station: Station) {\n  try {\n    const match = /^\\s*(-?\\d+\\.\\d+)\\s*,\\s*(-?\\d+\\.\\d+)\\s*$/.exec(position);\n\n    if (!match) {\n      throw new Error(`Unable to parse \"lat, lng\" from ${position}`);\n    }\n\n    station.lat = Number(match[1]);\n    station.lng = Number(match[2]);\n  } catch (error) {\n    station.errors.push(error);\n  }\n}\n","import {OperatorFunction} from 'rxjs';\nimport {Station} from '~/station';\nimport {Smoove} from './transform';\n\nenum StationSourceType {\n  Smoove,\n}\n\nexport interface StationSourceConfig {\n  location: google.maps.LatLngLiteral;\n  name: string;\n  options?: any;\n  type: keyof typeof StationSourceType;\n  uri: string;\n  cors?: boolean;\n}\n\nconst configMap = new Map<string, StationSourceConfig>([\n  [\n    'test',\n    {\n      location: {\n        lat: 49.279627,\n        lng: -123.121116,\n      },\n      name: 'Test Data',\n      type: 'Smoove',\n      uri: '/static_data',\n    },\n  ],\n  [\n    'vancouver',\n    {\n      location: {\n        lat: 49.279627,\n        lng: -123.121116,\n      },\n      name: 'Mobi Bike Vancouver',\n      type: 'Smoove',\n      uri: 'http://vancouver-ca.smoove.pro/api-public/stations',\n      cors: true,\n    },\n  ],\n]);\n\nexport function getConfig(key: string) {\n  const config = configMap.get(key.toLowerCase());\n\n  if (!config) {\n    throw new Error(`No station data for source '${key}'`);\n  }\n\n  return config;\n}\n\nexport function getConfigByLocation(location: google.maps.LatLng) {\n  return Array.from(configMap.values())\n    .map((config) => ({\n      config,\n      distance: google.maps.geometry.spherical.computeDistanceBetween(\n        location,\n        new google.maps.LatLng(config.location.lat, config.location.lng),\n      ),\n    }))\n    .sort((a, b) => a.distance - b.distance)[0].config;\n}\n\nexport type StationSourceTransform = OperatorFunction<any, Station[]>;\n\nexport function mapTransform({\n  type,\n}: StationSourceConfig): StationSourceTransform {\n  switch (type) {\n    case 'Smoove':\n      return Smoove;\n    default:\n      throw new Error(`Invalid Configuration '${type}'`);\n  }\n}\n","import moment from 'moment';\nimport {Observable, of, timer, combineLatest, merge} from 'rxjs';\nimport {ajax} from 'rxjs/ajax';\nimport {tap, map, catchError, mergeMap, debounceTime} from 'rxjs/operators';\nimport {Station, StationNode} from '~/station';\nimport {\n  getConfig,\n  getConfigByLocation,\n  mapTransform,\n  StationSourceConfig,\n  StationSourceTransform,\n} from './config';\n\nexport interface StationSourceResult {\n  config: StationSourceConfig;\n  error?: any[];\n  fetchedAt: moment.Moment;\n  nodes: StationNode[];\n}\n\nexport interface Options {\n  debug?: boolean;\n}\n\nexport class StationSource {\n  public static create(\n    configOrKey: string | StationSourceConfig,\n    {debug}: Options,\n  ) {\n    const config =\n      typeof configOrKey === 'string' ? getConfig(configOrKey) : configOrKey;\n\n    return new StationSource(config, mapTransform(config), debug);\n  }\n\n  public static nearest(location: google.maps.LatLng, options: Options) {\n    return StationSource.create(getConfigByLocation(location), options);\n  }\n\n  readonly config: StationSourceConfig;\n  readonly verboseOutput: boolean;\n  private readonly transform: StationSourceTransform;\n\n  constructor(\n    config: StationSourceConfig,\n    transform: StationSourceTransform,\n    verboseOutput = process.env.NODE_ENV !== 'production',\n  ) {\n    this.config = config;\n    this.transform = transform;\n    this.verboseOutput = verboseOutput;\n  }\n\n  getJSON() {\n    const uri = this.config.cors\n      ? `https://cors.io/?${this.config.uri}`\n      : this.config.uri;\n    this.debug(`Fetching stations from '${uri}' ...`);\n\n    const headers = this.config.options\n      ? this.config.options.headers\n      : undefined;\n    return ajax.getJSON(uri, headers);\n  }\n\n  getStations(source?: Observable<any>) {\n    return (source || this.getJSON()).pipe(\n      tap((response) => {\n        this.debug('Fetch Response', response);\n      }),\n      this.transform,\n      map<Station[], StationSourceResult>((stations) => {\n        this.debug(`Fetched ${stations.length} stations`);\n\n        return {\n          config: this.config,\n          nodes: stations.map((station) => new StationNode(station)),\n          fetchedAt: moment(),\n        };\n      }),\n      catchError((error = {}) => {\n        this.debug(`Fetch failed: ${error.message || 'Unknown Error'}`, error);\n\n        return of<StationSourceResult>({\n          error,\n          config: this.config,\n          fetchedAt: moment(),\n          nodes: [],\n        });\n      }),\n    );\n  }\n\n  watchStations(\n    reloader: Observable<any> = of(true),\n    interval = 300,\n    source?: Observable<any>,\n  ) {\n    return merge(timer(0, 1000 * interval), reloader).pipe(\n      debounceTime(100),\n      mergeMap(() => this.getStations(source)),\n    );\n  }\n\n  protected debug(message: string, ...args: any[]) {\n    if (this.verboseOutput) {\n      if (args.length) {\n        console.log(message, args);\n      } else {\n        console.log(message);\n      }\n    }\n  }\n}\n","import {mapPropsStream, setObservableConfig, withProps} from 'recompose';\nimport {from, Observable, combineLatest} from 'rxjs';\nimport {\n  map,\n  filter,\n  distinctUntilChanged,\n  startWith,\n  mergeMap,\n} from 'rxjs/operators';\nimport {StationSource, StationSourceResult} from '~/data';\nimport {Subject} from 'rxjs/internal/Subject';\n\nsetObservableConfig({\n  fromESObservable: from as any,\n});\n\nexport interface WithQueryParamProps {\n  params: Map<string, string> | null;\n}\n\nfunction getUrlParams() {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const params = new Map<string, string>();\n\n  new URLSearchParams(window.location.search).forEach((value, key) => {\n    params.set(key.toLowerCase(), value);\n  });\n\n  return params;\n}\n\nexport const withQueryParams = withProps<WithQueryParamProps, {}>(() => {\n  return {\n    params: getUrlParams(),\n  };\n});\n\ninterface PositionProps {\n  coords?: Coordinates;\n  timestamp?: number;\n  error?: any;\n}\n\nexport interface WithPositionProps {\n  position?: PositionProps;\n}\n\nexport function withPosition(\n  options: PositionOptions = {enableHighAccuracy: true},\n) {\n  const source = new Observable<PositionProps>((observer) => {\n    navigator.geolocation.watchPosition(\n      (position) => {\n        observer.next(position);\n      },\n      (error) => {\n        observer.error({error});\n      },\n      options,\n    );\n  });\n\n  return mapPropsStream<WithPositionProps, {}>((props) => {\n    return combineLatest(\n      source.pipe(startWith(undefined)),\n      props,\n      (position, prev) => {\n        console.log('[position]', position, prev);\n        return {\n          ...prev,\n          position,\n        };\n      },\n    );\n  });\n}\n\nexport interface WithStationsProps {\n  stations?: StationSourceResult;\n  reload(): void;\n}\n\nexport function withStations(defaultKey = 'vancouver') {\n  const reloader = new Subject();\n\n  return mapPropsStream<\n    WithStationsProps,\n    WithStationsProps & WithQueryParamProps\n  >((props) => {\n    const stationsObservable = props.pipe(\n      filter(({params}) => Boolean(params)),\n      map(({params}) => {\n        return {\n          debug: Boolean(params.get('debug')),\n          source:\n            params.get('source') || (params.get('test') ? 'test' : defaultKey),\n        };\n      }),\n      distinctUntilChanged(\n        (a, b) => a.debug === b.debug && a.source === b.source,\n      ),\n      mergeMap(({debug, source}) => {\n        console.log('fetch', {source, debug});\n        return StationSource.create(source, {debug}).watchStations(reloader);\n      }),\n    );\n\n    return combineLatest(stationsObservable, props, (stations, prev) => {\n      console.log('[stations]', stations, prev);\n      return {\n        ...prev,\n        stations,\n        reload: () => {\n          console.log('reload');\n          reloader.next();\n        },\n      };\n    });\n  });\n}\n","import * as React from 'react';\nimport {compose} from 'recompose';\nimport {Loader, StationMap} from '~/components';\nimport {DefaultLayout} from '~/layouts';\nimport {\n  withPosition,\n  WithPositionProps,\n  withQueryParams,\n  WithQueryParamProps,\n  withStations,\n  WithStationsProps,\n} from './decorators';\n\ntype ComposedProps = WithPositionProps &\n  WithQueryParamProps &\n  WithStationsProps;\n\nexport function IndexPage({position, reload, stations}: ComposedProps) {\n  console.log('reload', reload);\n  return (\n    <DefaultLayout>\n      {!stations ? (\n        <Loader />\n      ) : (\n        <StationMap\n          fetchedAt={stations.fetchedAt}\n          location={stations.config.location}\n          nodes={stations.nodes}\n          position={position}\n        />\n      )}\n    </DefaultLayout>\n  );\n}\n\nexport default compose<ComposedProps, {}>(\n  // withQueryParams,\n  withPosition(),\n  withStations(),\n)(IndexPage);\n","import IndexPage from './IndexPage';\nexport default IndexPage;\n","import * as React from 'react';\n\nexport function NotFoundPage() {\n  return (\n    <div>\n      <h1>NOT FOUND</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import NotFoundPage from './NotFoundPage';\nexport default NotFoundPage;\n","import Loader, {LoaderProps} from './Loader';\nexport type LoaderProps = LoaderProps;\nexport {Loader};\n\nimport StationMap, {StationMapProps} from './StationMap';\nexport type StationMapProps = StationMapProps;\nexport {StationMap};\n\nimport IndexPage from './IndexPage';\nexport {IndexPage};\n\nimport NotFoundPage from './NotFoundPage';\nexport {NotFoundPage};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingContainer\":\"Loader-module--LoadingContainer--1fcG7\",\"Loader\":\"Loader-module--Loader--3Q9b5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingContainer\":\"StationMap-module--LoadingContainer--3ziae\",\"MapContainer\":\"StationMap-module--MapContainer--3ypYa\",\"Map\":\"StationMap-module--Map--foP4U\"};","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header-module--Header--umzWI\",\"HeaderLogo\":\"Header-module--HeaderLogo--2YUir\",\"HeaderContent\":\"Header-module--HeaderContent--1J1nM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"DefaultLayout-module--Container--1-A96\",\"Content\":\"DefaultLayout-module--Content--2xYut\"};"],"sourceRoot":""}