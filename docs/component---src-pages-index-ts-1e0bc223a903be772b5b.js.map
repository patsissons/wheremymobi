{"version":3,"sources":["webpack:///./src/pages/index.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Loader/Loader.tsx","webpack:///./src/components/Loader/index.ts","webpack:///./src/components/StationMap/components/GpsMarker/GpsMarker.tsx","webpack:///./src/components/StationMap/components/GpsMarker/index.ts","webpack:///./src/components/StationMap/components/StationInfo/StationInfo.tsx","webpack:///./src/components/StationMap/components/StationInfo/index.ts","webpack:///./src/components/StationMap/components/StationMarker/icon.ts","webpack:///./src/components/StationMap/components/StationMarker/StationMarker.tsx","webpack:///./src/components/StationMap/components/StationMarker/index.ts","webpack:///./src/components/StationMap/decorators.ts","webpack:///./src/components/StationMap/StationMap.tsx","webpack:///./src/components/StationMap/index.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/layouts/DefaultLayout/components/Header/Header.tsx","webpack:///./src/layouts/DefaultLayout/components/Header/index.ts","webpack:///./src/layouts/DefaultLayout/DefaultLayout.tsx","webpack:///./src/layouts/DefaultLayout/index.ts","webpack:///./src/station/Node.ts","webpack:///./src/data/transform/Smoove.ts","webpack:///./src/station/Station.ts","webpack:///./src/data/config.ts","webpack:///./src/data/StationSource.ts","webpack:///./src/components/pages/IndexPage/decorators.ts","webpack:///./src/components/pages/IndexPage/IndexPage.tsx","webpack:///./src/components/pages/IndexPage/index.ts","webpack:///./src/components/pages/NotFoundPage/NotFoundPage.tsx","webpack:///./src/components/pages/NotFoundPage/index.ts","webpack:///./src/components/pages/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","_components_pages__WEBPACK_IMPORTED_MODULE_0__","IndexPage","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","createElement","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","loaders","compose","Loader","withProps","_ref2","name","Math","floor","random","length","Boolean","react","className","styles","dist_default","a","GpsMarker","_ref$color","color","coords","props","timestamp","objectWithoutPropertiesLoose_default","accuracy","heading","lat","latitude","lng","longitude","position","google","maps","LatLng","lib","center","radius","options","fillColor","strokeColor","fillOpacity","strokeWeight","icon","anchor","Point","path","SymbolPath","FORWARD_CLOSED_ARROW","rotation","scale","zIndex","Marker","MAX_ZINDEX","StationInfo","fetchedAt","station","number","toString","padStart","operative","bikes","free","total","target","href","fromNow","marker","trim","markerWithFillColor","encodeURIComponent","replace","createIcon","url","labelOrigin","StationMarker","withHandlers","handleOnClick","showInfo","node","onClick","label","text","fontSize","fontWeight","withMapsApiKey","defaultProps","mapsApiKey","StationMap","_React$PureComponent","_this","_len","arguments","args","Array","_key","call","apply","this","concat","renderInfo","_this$props","selectedNode","_selectedNode$station","onCloseClick","hideInfo","pixelOffset","Size","components_StationInfo","renderMarker","isValid","console","debug","components_StationMarker","key","renderMarkers","clustered","markers","from","nodes","values","map","MarkerClusterer_default","averageCenter","enableRetinaIcons","gridSize","maxZoom","renderPosition","components_GpsMarker","inheritsLoose_default","prototype","render","_this$props2","defaultCenter","defaultZoom","withStateHandlers","undefined","googleMapURL","loadingElement","containerElement","mapElement","mapProps","reduce","set","Map","withScriptjs","withGoogleMap","StaticQueryContext","createContext","StaticQuery","react_default","Consumer","staticQueryData","data","query","children","object","func","Header","description","logo","logoUrl","src","DefaultLayout","errors","fromRenderProps","gatsby_browser_entry_StaticQuery","_3229557108","_ref3","site","_ref$site$siteMetadat","siteMetadata","components_Header","StationNode","createClass_default","get","Number","isInteger","isFinite","test","every","x","create","createStation","avl_bikes","free_slots","total_slots","match","exec","Error","error","push","parseNameAndNumber","parseLatLng","coordinates","StationSourceType","result","configMap","type","uri","cors","StationSource","config","transform","verboseOutput","process","configOrKey","toLowerCase","getConfig","Smoove","mapTransform","nearest","distance","geometry","spherical","computeDistanceBetween","sort","b","getConfigByLocation","_proto","getJSON","headers","ajax","getStations","source","pipe","tap","response","stations","moment","catchError","message","of","watchStations","reloader","interval","_this2","merge","timer","debounceTime","mergeMap","log","getUrlParams","window","params","URLSearchParams","search","forEach","value","setObservableConfig","fromESObservable","withQueryParams","enableHighAccuracy","Subject","reload","next","mapPropsStream","navigator","geolocation","filter","Observable","observer","watchPosition","startWith","combineLatest","prev","withPosition","defaultKey","distinctUntilChanged","withStations","layouts_DefaultLayout","components_StationMap","components_Loader","NotFoundPage","d","pages_IndexPage","pages_NotFoundPage"],"mappings":"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","file":"component---src-pages-index-ts-1e0bc223a903be772b5b.js","sourcesContent":["import {IndexPage} from '~/components/pages';\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react';\nimport Spinner, {SpinnerProps} from 'react-spinkit';\nimport {compose, withProps} from 'recompose';\n\nimport * as styles from './Loader.module.scss';\n\nconst loaders: Required<SpinnerProps['name']>[] = [\n  'double-bounce',\n  'chasing-dots',\n  'circle',\n  'cube-grid',\n];\n\nfunction randomLoaderName() {\n  return loaders[Math.floor(Math.random() * loaders.length)];\n}\n\nexport interface Props {\n  name?: SpinnerProps['name'];\n}\n\nexport function Loader({name}: Props) {\n  return (\n    Boolean(name) && (\n      <div className={styles.LoadingContainer}>\n        <Spinner className={styles.Loader} name={name} />\n      </div>\n    )\n  );\n}\n\nexport default compose<Props, {}>(\n  withProps(({name}: Props) => ({name: name || randomLoaderName()})),\n)(Loader as any);\n","import Loader, {Props} from './Loader';\nexport type LoaderProps = Props;\nexport default Loader;\n","import * as React from 'react';\nimport {Circle, Marker, MarkerProps} from 'react-google-maps';\n\nexport interface Props extends MarkerProps {\n  color?: string;\n  coords: Coordinates;\n  timestamp: number;\n}\n\ntype ComposedProps = Props;\n\nexport function GpsMarker({\n  color = 'magenta',\n  coords,\n  timestamp,\n  ...props\n}: ComposedProps) {\n  const {accuracy, heading, latitude: lat, longitude: lng} = coords;\n\n  const position = new google.maps.LatLng(lat, lng);\n\n  return (\n    <>\n      <Circle\n        center={position}\n        radius={accuracy}\n        options={{\n          fillColor: color,\n          strokeColor: color,\n          fillOpacity: 0.25,\n          strokeWeight: 1,\n        }}\n      />\n      <Marker\n        icon={{\n          anchor: new google.maps.Point(0, 2.6),\n          path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n          strokeColor: color,\n          fillColor: color,\n          fillOpacity: 1,\n          rotation: heading,\n          scale: 10,\n          strokeWeight: 1,\n        }}\n        position={new google.maps.LatLng(lat, lng)}\n        zIndex={google.maps.Marker.MAX_ZINDEX}\n        {...props}\n      />\n    </>\n  );\n}\n\nexport default GpsMarker;\n","import GpsMarker, {Props} from './GpsMarker';\nexport type GpsMarkerProps = Props;\nexport default GpsMarker;\n","import * as React from 'react';\nimport moment from 'moment';\nimport {Station} from '~/station';\n\nexport interface Props {\n  fetchedAt: moment.Moment;\n  station: Station;\n}\n\nexport function StationInfo({fetchedAt, station}: Props) {\n  return (\n    <div>\n      <ul>\n        <li>{`[${station.number.toString().padStart(4, '0')}] ${station.name}${\n          station.operative ? '' : ' (CLOSED)'\n        }`}</li>\n        <li>{`${station.bikes} bikes / ${station.free} slots (${\n          station.total\n        } total)`}</li>\n        <li>\n          <a\n            target=\"_blank\"\n            href={`https://www.google.com/maps/dir/?api=${1}&travelmode=bicycling&destination=${\n              station.lat\n            },${station.lng}`}\n          >{`${station.lat}, ${station.lng}`}</a>\n        </li>\n        <li>{`Last Updated: ${fetchedAt.fromNow()}`}</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default StationInfo;\n","import StationInfo, {Props} from './StationInfo';\nexport type StationInfoProps = Props;\nexport default StationInfo;\n","import {Station} from '~/station';\nconst marker = `\n<svg width=\"100px\" height=\"100px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\n  <path id=\"bg\" fill=\"#ffffff\" d=\"m77.438,31.70225c-0.139,-5.802 -1.797,-10.248 -4.202,-14.012c-2.307,-3.607 -5.341,-6.666 -9.258,-8.958c-4.793,-2.803 -11.556,-4.639 -18.766,-3.553c-8.819,1.33 -15.391,6.39 -19.316,12.561c-2.385,3.752 -4.039,8.341 -4.152,14.062c-0.117,5.854 1.706,10.369 3.954,14.261c1.122,1.948 2.132,3.929 3.302,5.805c3.504,5.621 7.291,10.97 10.559,16.765c4.406,7.812 8.044,16.242 10.108,26.371c2.984,-15.367 9.802,-26.583 17.063,-37.58c2.439,-3.692 4.867,-7.382 6.806,-11.41c0.993,-2.063 2.107,-3.996 2.803,-6.306c0.684,-2.283 1.172,-5.035 1.099,-8.006z\"/>\n  <path id=\"fill\" fill=\"currentColor\" d=\"M77.438,31.834c-0.139-5.802-1.797-10.248-4.202-14.012c-2.307-3.607-5.341-6.666-9.258-8.958   c-4.793-2.803-11.556-4.639-18.766-3.553c-8.819,1.33-15.391,6.39-19.316,12.561c-2.385,3.752-4.039,8.341-4.152,14.062   c-0.117,5.854,1.706,10.369,3.954,14.261C26.82,48.143,27.83,50.124,29,52c3.504,5.621,7.291,10.97,10.559,16.765   c4.406,7.812,8.044,16.242,10.108,26.371c2.984-15.367,9.802-26.583,17.063-37.58c2.439-3.692,4.867-7.382,6.806-11.41   c0.993-2.063,2.107-3.996,2.803-6.306C77.023,37.557,77.511,34.805,77.438,31.834z M49.685,52.47   c-11.004,0-19.923-8.92-19.923-19.923c0-11.002,8.919-19.922,19.923-19.922c11.003,0,19.923,8.92,19.923,19.922   C69.607,43.55,60.688,52.47,49.685,52.47z\"/>\n</svg>`.trim();\n\nexport function getFillColor({bikes}: Station): string {\n  if (bikes > 10) {\n    return 'forestgreen';\n  }\n\n  if (bikes > 5) {\n    return 'coral';\n  }\n\n  return 'crimson';\n}\n\nfunction markerWithFillColor(station: Station) {\n  return `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(\n    marker.replace(/fill=\"currentColor\"/, `fill=\"${getFillColor(station)}\"`),\n  )}`;\n}\n\nexport function createIcon(station: Station): google.maps.Icon {\n  return {\n    url: markerWithFillColor(station),\n    labelOrigin: new google.maps.Point(49, 33),\n  };\n}\n","import * as React from 'react';\nimport {Marker, MarkerProps} from 'react-google-maps';\nimport {compose, withHandlers} from 'recompose';\nimport {StationNode} from '~/station';\nimport {createIcon} from './icon';\n\nexport interface SelectedStationProps {\n  selectedNode?: StationNode;\n}\n\nexport interface ActionProps {\n  showInfo(station: StationNode): SelectedStationProps;\n}\n\nexport interface Props extends ActionProps, MarkerProps {\n  node: StationNode;\n}\n\ninterface HandlerProps {\n  handleOnClick(): void;\n}\n\ntype ComposedProps = Props & HandlerProps;\n\nexport function StationMarker({\n  handleOnClick,\n  showInfo,\n  node: {station},\n  ...props\n}: ComposedProps) {\n  const {lat, lng} = station;\n\n  return (\n    <Marker\n      onClick={handleOnClick}\n      icon={createIcon(station)}\n      label={{\n        text: `${station.bikes} | ${station.free}`,\n        fontSize: '0.75rem',\n        fontWeight: 'bold',\n      }}\n      position={new google.maps.LatLng(lat, lng)}\n      {...props}\n    />\n  );\n}\n\nexport default compose<ComposedProps, Props>(\n  withHandlers({\n    handleOnClick({showInfo, node}: Props) {\n      return () => showInfo(node);\n    },\n  }),\n)(StationMarker);\n","import StationMarker, {\n  ActionProps,\n  Props,\n  SelectedStationProps,\n} from './StationMarker';\nexport type SelectedStationProps = SelectedStationProps;\nexport type StationMarkerActionProps = ActionProps;\nexport type StationMarkerProps = Props;\nexport default StationMarker;\n","import {defaultProps, InferableComponentEnhancerWithProps} from 'recompose';\n\nexport interface WithMapsApiKeyProps {\n  mapsApiKey: string;\n}\n\n// export function withMapsApiKey(): InferableComponentEnhancerWithProps<\n//   WithMapsApiKeyProps,\n//   any\n// > {\n//   return defaultProps({\n//     mapsApiKey: 'AIzaSyBXrYScIU6sWYUWLLlovYhzq-bLzwTgAoc',\n//   });\n// }\n\nexport const withMapsApiKey = defaultProps({\n  mapsApiKey: 'AIzaSyBXrYScIU6sWYUWLLlovYhzq-bLzwTgAoc',\n});\n","import * as React from 'react';\nimport moment from 'moment';\nimport {\n  compose,\n  mapProps,\n  withProps,\n  withStateHandlers,\n  defaultProps,\n  StateHandlerMap,\n} from 'recompose';\nimport {\n  BicyclingLayer,\n  GoogleMap,\n  InfoWindow,\n  withScriptjs,\n  WithScriptjsProps,\n  withGoogleMap,\n  WithGoogleMapProps,\n} from 'react-google-maps';\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer';\nimport {StationNode} from '~/station';\nimport {\n  GpsMarker,\n  GpsMarkerProps,\n  SelectedStationProps,\n  StationInfo,\n  StationMarker,\n  StationMarkerActionProps,\n} from './components';\nimport {withMapsApiKey, WithMapsApiKeyProps} from './decorators';\n\nimport * as styles from './StationMap.module.scss';\n\ninterface FetchProps {\n  fetchedAt: moment.Moment;\n  location: google.maps.LatLngLiteral;\n}\n\ninterface PositionProps {\n  position: Partial<GpsMarkerProps> | undefined;\n}\n\nexport interface Props extends FetchProps, PositionProps {\n  nodes: StationNode[];\n  reload(): void;\n}\n\ninterface DefaultProps {\n  defaultCenter: google.maps.LatLngLiteral;\n  defaultZoom: number;\n}\n\ninterface InjectedProps {\n  nodes: Map<number, StationNode>;\n}\n\ninterface ActionProps\n  extends StationMarkerActionProps,\n    StateHandlerMap<SelectedStationProps> {\n  hideInfo(): SelectedStationProps;\n}\n\ntype ComposedProps = ActionProps &\n  DefaultProps &\n  FetchProps &\n  InjectedProps &\n  PositionProps &\n  SelectedStationProps &\n  WithMapsApiKeyProps &\n  WithGoogleMapProps &\n  WithScriptjsProps;\n\nexport class StationMap extends React.PureComponent<ComposedProps> {\n  renderInfo = () => {\n    const {fetchedAt, selectedNode} = this.props;\n\n    if (!selectedNode) {\n      return false;\n    }\n\n    const {\n      station: {lat, lng},\n    } = selectedNode;\n\n    return (\n      <InfoWindow\n        position={{\n          lat,\n          lng,\n        }}\n        onCloseClick={this.props.hideInfo}\n        options={{\n          pixelOffset: new google.maps.Size(0, -100),\n        }}\n      >\n        <StationInfo fetchedAt={fetchedAt} station={selectedNode.station} />\n      </InfoWindow>\n    );\n  };\n\n  renderMarker = (node: StationNode) => {\n    if (!node.isValid) {\n      // this should never happen\n      // tslint:disable-next-line:no-console\n      console.debug(`Bad Station Found`, node.station);\n      return false;\n    }\n\n    const {showInfo} = this.props;\n\n    return (\n      <StationMarker\n        key={node.station.number}\n        node={node}\n        showInfo={showInfo}\n      />\n    );\n  };\n\n  renderMarkers = (clustered = true) => {\n    const markers = Array.from(this.props.nodes.values()).map(\n      this.renderMarker,\n    );\n\n    return clustered ? (\n      <MarkerClusterer\n        averageCenter\n        enableRetinaIcons\n        gridSize={60}\n        maxZoom={17}\n      >\n        {markers}\n      </MarkerClusterer>\n    ) : (\n      markers\n    );\n  };\n\n  renderPosition = () => {\n    const {position} = this.props;\n\n    if (!position || !position.coords || !position.timestamp) {\n      return false;\n    }\n\n    return (\n      <GpsMarker coords={position.coords} timestamp={position.timestamp} />\n    );\n  };\n\n  render() {\n    const {hideInfo, defaultCenter, defaultZoom} = this.props;\n\n    return (\n      <GoogleMap\n        defaultCenter={defaultCenter}\n        defaultZoom={defaultZoom}\n        onClick={hideInfo}\n      >\n        <BicyclingLayer />\n        {this.renderMarkers()}\n        {this.renderPosition()}\n        {this.renderInfo()}\n      </GoogleMap>\n    );\n  }\n}\n\nexport default compose<ComposedProps, Props>(\n  withMapsApiKey,\n  defaultProps<DefaultProps>({\n    defaultCenter: {\n      lat: 49.279627,\n      lng: -123.121116,\n    },\n    defaultZoom: 13,\n  }),\n  withStateHandlers<SelectedStationProps, ActionProps, ComposedProps>(\n    {},\n    {\n      showInfo() {\n        return (selectedNode: StationNode) => ({selectedNode});\n      },\n      hideInfo() {\n        return () => ({selectedNode: undefined});\n      },\n    },\n  ),\n  withProps<WithGoogleMapProps & WithScriptjsProps, WithMapsApiKeyProps>(\n    ({mapsApiKey}) => ({\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${mapsApiKey}&v=3.exp&libraries=geometry,drawing,places`,\n      loadingElement: <div className={styles.LoadingContainer}>Loading...</div>,\n      containerElement: <div className={styles.MapContainer} />,\n      mapElement: <div className={styles.Map} />,\n    }),\n  ),\n  mapProps<InjectedProps, WithMapsApiKeyProps & Props>(\n    ({mapsApiKey, nodes, ...props}) => {\n      return {\n        nodes: nodes.reduce((map, node) => {\n          return map.set(node.station.number, node);\n        }, new Map<number, StationNode>()),\n        ...props,\n      };\n    },\n  ),\n  withScriptjs,\n  withGoogleMap,\n)(StationMap);\n","import StationMap, {Props} from './StationMap';\nexport type StationMapProps = Props;\nexport default StationMap;\n\nimport {withMapsApiKey, WithMapsApiKeyProps} from './decorators';\nexport type WithMapsApiKeyProps = WithMapsApiKeyProps;\nexport {withMapsApiKey};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react';\n\nimport * as styles from './Header.module.scss';\n\nexport interface Props {\n  description: string;\n  logo: string;\n  logoUrl: string;\n}\n\nexport function Header({description, logo, logoUrl}: Props) {\n  return (\n    <div className={styles.Header}>\n      <div className={styles.HeaderLogo}>\n        <a href={logoUrl}>\n          <img src={logo} />\n        </a>\n      </div>\n      <div className={styles.HeaderContent}>\n        <h1>{description}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import Header, {Props} from './Header';\nexport type HeaderProps = Props;\nexport default Header;\n","import * as React from 'react';\nimport {graphql, StaticQuery} from 'gatsby';\nimport {compose, defaultProps, fromRenderProps} from 'recompose';\nimport {Header, HeaderProps} from './components';\n\nimport * as styles from './DefaultLayout.module.scss';\n\nexport interface Props {\n  errors: any[];\n}\n\ninterface QueryProps {\n  site: {\n    siteMetadata: HeaderProps;\n  };\n}\n\ntype ComposedProps = Props & QueryProps;\n\nexport function DefaultLayout({\n  errors,\n  site: {\n    siteMetadata: {description, logo, logoUrl},\n  },\n  ...props\n}: ComposedProps) {\n  return (\n    <div className={styles.Container}>\n      <Header description={description} logo={logo} logoUrl={logoUrl} />\n      <div className={styles.Content} {...props} />\n      {errors.length === 0 ? false : <div>{errors}</div>}\n    </div>\n  );\n}\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        description\n        logo\n        logoUrl\n      }\n    }\n  }\n`;\n\nfunction DefaultLayoutQuery({...props}: any) {\n  return <StaticQuery query={query} {...props} />;\n}\n\nexport default compose<ComposedProps, {}>(\n  defaultProps({\n    errors: [],\n  }),\n  fromRenderProps<QueryProps, {}>(DefaultLayoutQuery, ({site}) => ({site})),\n)(DefaultLayout);\n","import DefaultLayout, {Props} from './DefaultLayout';\nexport type DefaultLayoutProps = Props;\nexport default DefaultLayout;\n","import {Station} from './Station';\n\nexport class StationNode {\n  public readonly station: Station;\n\n  constructor(station: Station) {\n    this.station = station;\n  }\n\n  public get isValid() {\n    return [\n      Number.isInteger(this.station.bikes),\n      Number.isInteger(this.station.free),\n      Number.isInteger(this.station.total),\n      Number.isInteger(this.station.number),\n      this.station.number > 0,\n      Number.isFinite(this.station.lat),\n      this.station.lat !== 0,\n      Number.isFinite(this.station.lng),\n      this.station.lng !== 0,\n      /^\\w/.test(this.station.name),\n      this.station.errors.length === 0,\n    ].every((x) => x);\n  }\n\n  toString() {\n    return this.isValid\n      ? `[${this.station.number}] ${this.station.name} (${\n          this.station.bikes\n        } | ${this.station.free})`\n      : 'INVALID';\n  }\n}\n","import {OperatorFunction} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {createStation, parseLatLng, Station} from '~/station';\n\nexport interface SmooveStation {\n  name: string;\n  coordinates: string;\n  total_slots: number;\n  free_slots: number;\n  avl_bikes: number;\n  operative: boolean;\n  style: string;\n}\n\nexport interface Response {\n  result: SmooveStation[];\n}\n\nexport function parseNameAndNumber({name}: SmooveStation, station: Station) {\n  try {\n    const match = /^(\\d+)\\s+(.*)$/.exec(name);\n\n    if (!match) {\n      throw new Error(`Unable to parse \"number name\" from ${name}`);\n    }\n\n    station.number = Number(match[1]);\n    station.name = match[2];\n  } catch (error) {\n    station.errors.push(error);\n  }\n}\n\nexport function create(data: SmooveStation) {\n  const station = createStation({\n    data,\n    bikes: data.avl_bikes,\n    free: data.free_slots,\n    operative: data.operative,\n    total: data.total_slots,\n  });\n\n  parseNameAndNumber(data, station);\n  parseLatLng(data.coordinates, station);\n\n  return station;\n}\n\nexport default map<Response, Station[]>(({result}) => result.map(create));\n","export interface Station extends google.maps.LatLngLiteral {\n  bikes: number;\n  data: any;\n  errors: any[];\n  free: number;\n  name: string;\n  number: number;\n  operative: boolean;\n  total: number;\n}\n\nexport function createStation(station: Partial<Station> = {}): Station {\n  return {\n    data: null,\n    errors: [],\n    bikes: 0,\n    free: 0,\n    lat: 0,\n    lng: 0,\n    name: '',\n    number: 0,\n    operative: false,\n    total: 0,\n    ...station,\n  };\n}\n\nexport function parseLatLng(position: string, station: Station) {\n  try {\n    const match = /^\\s*(-?\\d+\\.\\d+)\\s*,\\s*(-?\\d+\\.\\d+)\\s*$/.exec(position);\n\n    if (!match) {\n      throw new Error(`Unable to parse \"lat, lng\" from ${position}`);\n    }\n\n    station.lat = Number(match[1]);\n    station.lng = Number(match[2]);\n  } catch (error) {\n    station.errors.push(error);\n  }\n}\n","import {OperatorFunction} from 'rxjs';\nimport {Station} from '~/station';\nimport {Smoove} from './transform';\n\nenum StationSourceType {\n  Smoove,\n}\n\nexport interface StationSourceConfig {\n  location: google.maps.LatLngLiteral;\n  name: string;\n  options?: any;\n  type: keyof typeof StationSourceType;\n  uri: string;\n  cors?: boolean;\n}\n\nconst configMap = new Map<string, StationSourceConfig>([\n  [\n    'test',\n    {\n      location: {\n        lat: 49.279627,\n        lng: -123.121116,\n      },\n      name: 'Test Data',\n      type: 'Smoove',\n      uri: '/static_data',\n    },\n  ],\n  [\n    'vancouver',\n    {\n      location: {\n        lat: 49.279627,\n        lng: -123.121116,\n      },\n      name: 'Mobi Bike Vancouver',\n      type: 'Smoove',\n      uri: 'http://vancouver-ca.smoove.pro/api-public/stations',\n      cors: true,\n    },\n  ],\n]);\n\nexport function getConfig(key: string) {\n  const config = configMap.get(key.toLowerCase());\n\n  if (!config) {\n    throw new Error(`No station data for source '${key}'`);\n  }\n\n  return config;\n}\n\nexport function getConfigByLocation(location: google.maps.LatLng) {\n  return Array.from(configMap.values())\n    .map((config) => ({\n      config,\n      distance: google.maps.geometry.spherical.computeDistanceBetween(\n        location,\n        new google.maps.LatLng(config.location.lat, config.location.lng),\n      ),\n    }))\n    .sort((a, b) => a.distance - b.distance)[0].config;\n}\n\nexport type StationSourceTransform = OperatorFunction<any, Station[]>;\n\nexport function mapTransform({\n  type,\n}: StationSourceConfig): StationSourceTransform {\n  switch (type) {\n    case 'Smoove':\n      return Smoove;\n    default:\n      throw new Error(`Invalid Configuration '${type}'`);\n  }\n}\n","import moment from 'moment';\nimport {Observable, of, timer, combineLatest, merge} from 'rxjs';\nimport {ajax} from 'rxjs/ajax';\nimport {tap, map, catchError, mergeMap, debounceTime} from 'rxjs/operators';\nimport {Station, StationNode} from '~/station';\nimport {\n  getConfig,\n  getConfigByLocation,\n  mapTransform,\n  StationSourceConfig,\n  StationSourceTransform,\n} from './config';\n\nexport interface StationSourceResult {\n  config: StationSourceConfig;\n  error?: any[];\n  fetchedAt: moment.Moment;\n  nodes: StationNode[];\n}\n\nexport interface Options {\n  debug?: boolean;\n}\n\nexport class StationSource {\n  public static create(\n    configOrKey: string | StationSourceConfig,\n    {debug}: Options,\n  ) {\n    const config =\n      typeof configOrKey === 'string' ? getConfig(configOrKey) : configOrKey;\n\n    return new StationSource(config, mapTransform(config), debug);\n  }\n\n  public static nearest(location: google.maps.LatLng, options: Options) {\n    return StationSource.create(getConfigByLocation(location), options);\n  }\n\n  readonly config: StationSourceConfig;\n  readonly verboseOutput: boolean;\n  private readonly transform: StationSourceTransform;\n\n  constructor(\n    config: StationSourceConfig,\n    transform: StationSourceTransform,\n    verboseOutput = process.env.NODE_ENV !== 'production',\n  ) {\n    this.config = config;\n    this.transform = transform;\n    this.verboseOutput = verboseOutput;\n  }\n\n  getJSON() {\n    const uri = this.config.cors\n      ? `https://cors.io/?${this.config.uri}`\n      : this.config.uri;\n    this.debug(`Fetching stations from '${uri}' ...`);\n\n    const headers = this.config.options\n      ? this.config.options.headers\n      : undefined;\n    return ajax.getJSON(uri, headers);\n  }\n\n  getStations(source?: Observable<any>) {\n    return (source || this.getJSON()).pipe(\n      tap((response) => {\n        this.debug('Fetch Response', response);\n      }),\n      this.transform,\n      map<Station[], StationSourceResult>((stations) => {\n        this.debug(`Fetched ${stations.length} stations`);\n\n        return {\n          config: this.config,\n          nodes: stations.map((station) => new StationNode(station)),\n          fetchedAt: moment(),\n        };\n      }),\n      catchError((error = {}) => {\n        this.debug(`Fetch failed: ${error.message || 'Unknown Error'}`, error);\n\n        return of<StationSourceResult>({\n          error,\n          config: this.config,\n          fetchedAt: moment(),\n          nodes: [],\n        });\n      }),\n    );\n  }\n\n  watchStations(\n    reloader: Observable<any> = of(true),\n    interval = 300,\n    source?: Observable<any>,\n  ) {\n    return merge(timer(0, 1000 * interval), reloader).pipe(\n      debounceTime(100),\n      mergeMap(() => this.getStations(source)),\n    );\n  }\n\n  protected debug(message: string, ...args: any[]) {\n    if (this.verboseOutput) {\n      if (args.length) {\n        console.log(message, args);\n      } else {\n        console.log(message);\n      }\n    }\n  }\n}\n","import {mapPropsStream, setObservableConfig, withProps} from 'recompose';\nimport {from, Observable} from 'rxjs';\nimport {\n  combineLatest,\n  distinctUntilChanged,\n  filter,\n  map,\n  mergeMap,\n  startWith,\n} from 'rxjs/operators';\nimport {StationSource, StationSourceResult} from '~/data';\nimport {Subject} from 'rxjs/internal/Subject';\n\nsetObservableConfig({\n  fromESObservable: from as any,\n});\n\nexport type QueryParams = Map<string, string>;\n\nexport interface WithQueryParamProps {\n  params: QueryParams | null;\n}\n\nfunction getUrlParams() {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const params = new Map<string, string>();\n\n  new URLSearchParams(window.location.search).forEach((value, key) => {\n    params.set(key.toLowerCase(), value);\n  });\n\n  return params;\n}\n\nexport const withQueryParams = withProps<WithQueryParamProps, {}>(() => {\n  return {\n    params: getUrlParams(),\n  };\n});\n\ninterface PositionProps {\n  coords?: Coordinates;\n  timestamp?: number;\n  error?: any;\n}\n\nexport interface WithPositionProps {\n  position?: PositionProps;\n}\n\nexport function withPosition(\n  options: PositionOptions = {enableHighAccuracy: true},\n) {\n  const reloader = new Subject();\n  const reload = () => reloader.next();\n\n  return mapPropsStream<WithPositionProps, {}>((props) => {\n    return props.pipe(\n      map(() => typeof navigator !== 'undefined' && navigator.geolocation),\n      filter((geolocation): geolocation is Geolocation => Boolean(geolocation)),\n      mergeMap((geolocation) => {\n        return new Observable<PositionProps>((observer) => {\n          geolocation.watchPosition(\n            (position) => {\n              observer.next(position);\n            },\n            (error) => {\n              observer.error({error});\n            },\n            options,\n          );\n        });\n      }),\n      startWith(undefined),\n      combineLatest(props, (position, prev) => {\n        console.log('[position]', position, prev);\n        return {\n          ...prev,\n          reload,\n          position,\n        };\n      }),\n    );\n  });\n}\n\nexport interface WithStationsProps {\n  stations?: StationSourceResult;\n  reload(): void;\n}\n\nexport function withStations(defaultKey = 'vancouver') {\n  const reloader = new Subject();\n  const reload = () => {\n    console.log('reload');\n    reloader.next();\n  };\n\n  return mapPropsStream<\n    WithStationsProps,\n    WithStationsProps & WithQueryParamProps\n  >((props) => {\n    return props.pipe(\n      map(({params}) => params),\n      filter((params): params is QueryParams => params != null),\n      map((params) => {\n        return {\n          debug: Boolean(params.get('debug')),\n          source:\n            params.get('source') ||\n            (params.get('test') && 'test') ||\n            defaultKey,\n        };\n      }),\n      distinctUntilChanged(\n        (a, b) => a.debug === b.debug && a.source === b.source,\n      ),\n      mergeMap(({debug, source}) => {\n        console.log('fetch', {source, debug});\n        return StationSource.create(source, {debug}).watchStations(reloader);\n      }),\n      combineLatest(props, (stations, prev) => {\n        console.log('[stations]', stations, prev);\n        return {\n          ...prev,\n          reload,\n          stations,\n        };\n      }),\n    );\n  });\n}\n","import * as React from 'react';\nimport {compose} from 'recompose';\nimport {Loader, StationMap} from '~/components';\nimport {DefaultLayout} from '~/layouts';\nimport {\n  withPosition,\n  WithPositionProps,\n  withQueryParams,\n  WithQueryParamProps,\n  withStations,\n  WithStationsProps,\n} from './decorators';\n\ntype ComposedProps = WithPositionProps &\n  WithQueryParamProps &\n  WithStationsProps;\n\nexport function IndexPage({position, reload, stations}: ComposedProps) {\n  return (\n    <DefaultLayout>\n      {!stations ? (\n        <Loader />\n      ) : (\n        <StationMap\n          fetchedAt={stations.fetchedAt}\n          location={stations.config.location}\n          nodes={stations.nodes}\n          position={position}\n          reload={reload}\n        />\n      )}\n    </DefaultLayout>\n  );\n}\n\nexport default compose<ComposedProps, {}>(\n  withQueryParams,\n  withPosition(),\n  withStations(),\n)(IndexPage);\n","import IndexPage from './IndexPage';\nexport default IndexPage;\n","import * as React from 'react';\n\nexport function NotFoundPage() {\n  return (\n    <div>\n      <h1>NOT FOUND</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import NotFoundPage from './NotFoundPage';\nexport default NotFoundPage;\n","import IndexPage from './IndexPage';\nexport {IndexPage};\n\nimport NotFoundPage from './NotFoundPage';\nexport {NotFoundPage};\n"],"sourceRoot":""}